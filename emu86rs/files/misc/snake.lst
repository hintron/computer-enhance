 LINE  | ADDRESS  | HEX DUMP                  | ASSEMBLY
-------|----------|---------------------------|----------------------------
     1 |          |                           | ; -------------------------------------------------------------------
     2 |          |                           | ;                              Sna86.
     3 |          |                           | ;                     An 8086 simulator snake!
     4 |          |                           | ; -------------------------------------------------------------------
     5 |          |                           | ; MGH: Slightly modified from https://gist.github.com/charlesastaylor/18c7c8005fed9d0af1a3ee2b24fcd724. See also emulator/files/misc/-sna86.asm
     6 |          |                           | ; Assembly program intended to run in an 8086 simulator with functionaliy equal* to one made for homeworks
     7 |          |                           | ; up to Part 1 Episode 10 of the Peformance-Aware Programming Series (https://www.computerenhance.com/)
     8 |          |                           | ; by Casey Muratori. Demo - https://youtu.be/s_S4-QHeFMc.
     9 |          |                           | ;
    10 |          |                           | ; * mov, add, sub, cmp, je and jne was the target instructions. However I also added loop for convenience,
    11 |          |                           | ;   and jmp because conditional jumps have limited range! They are both simple enough to implment if you
    12 |          |                           | ;   already have the above.
    13 |          |                           | ; * int is also needed for a couple of things:
    14 |          |                           | ;   - int 0x21 function 0x55 is used to signal the size of the frame buffer to the simulator. Width is put in bx, height
    15 |          |                           | ;     into cx, and the frame buffer location in dx.
    16 |          |                           | ;   - int 0x21 function 0x56 is used for the program to signal it has finished a frame to allow the simulator to draw the
    17 |          |                           | ;     frame buffer to the screen
    18 |          |                           | ;
    19 |          |                           | ; Input is handled via the input "register" at memory address 0xFFFE, with each bit corresponding to an input
    20 |          |                           | ; button. Starting from the low bit the buttons are: Up, Down, Left, Right, Menu. Ie the low bit is used for
    21 |          |                           | ; the up button, the 5th bit is used for the menu button, and the top 3 bits are unused.
    22 |          |                           | ;
    23 |          |                           | ; Compiled with `nasm sna86.asm`. Or `nasm sna86.asm -DUSE_TITLE_SCREEN` to use the fancy title screen!
    24 |          |                           | ;
    25 |          |                           | ; Memory Layout:
    26 |          |                           | ; [0x0000]                Program
    27 |          |                           | ;                           Code
    28 |          |                           | ;                           Data
    29 |          |                           | ; [0x0000 + program_size] FrameBuffer
    30 |          |                           | ;                           u8 frame_buffer[frame_buffer_num_bytes]
    31 |          |                           | ; [¯\_(ツ)_/¯]             Snake
    32 |          |                           | ;                           u16 length
    33 |          |                           | ;                           u16 head
    34 |          |                           | ;                           // x, y coordinates stores as u16s. ie XXYYXXYYXXYYXX
    35 |          |                           | ;                           // These could be u8s. But simulator doesnt handle lots of u8 things. so u16 easier for now
    36 |          |                           | ;                           u16 *parts 
    37 |          |                           | ;
    38 |          |                           | ; NOTE(Charles): <label> resb/resw <num_bytes/words>, can be used to reserve space in binary! eg:
    39 |          |                           | ; scratch resb 256 ; create 256 byte scratch space.
    40 |          |                           | ;
    41 |          |                           | ; @TODO
    42 |          |                           | ; - Display the score! 
    43 |          |                           | ; - Seed the rng with some interrupt to get start value
    44 |          |                           | ; - Speed up menu transition with by adding interrupt to specifiy frame pointer. Then flip screens.
    45 |          |                           | ; - sometimes on eating an apple the new one can spawn in such a way that to gets eaten right away
    46 |          |                           | ;   and you get stuck with no apples?
    47 |          |                           | 
    48 |          |                           | ; NOTE(Charles): SI, DI and the segment registers are not currently used, so my simulator is configured to
    49 |          |                           | ; use these for deubgging. It will print the contents of SI, DI each frame. And, if any segment registers
    50 |          |                           | ; are set, it will print out the word at that address in memory.
    51 |          |                           | 
    52 |          |                           | bits 16
    53 |          |                           | 
    54 |          |                           | %define MEMORY_SCRATCH 0xFF00
    55 |          |                           | %define REGISTER_INPUT 0xFFFE
    56 |          |                           | 
    57 |          |                           | %define INPUT_UP    0x01
    58 |          |                           | %define INPUT_DOWN  0x02
    59 |          |                           | %define INPUT_LEFT  0x04
    60 |          |                           | %define INPUT_RIGHT 0x08
    61 |          |                           | %define INPUT_MENU  0x10
    62 |          |                           | 
    63 |          |                           | %define GAME_STATE_MENU 0
    64 |          |                           | %define GAME_STATE_PLAY 1
    65 |          |                           | 
    66 |          |                           | %define SCREEN_SIZE 64
    67 |          |                           | ; @TODO Setting this to 100 giffs big bug! Must be overwriting something somewhere. Pls fix.
    68 |          |                           | %define screen_color 30
    69 |          |                           | %define SCREEN_RGB screen_color, screen_color, screen_color
    70 |          |                           | ; Result of the input register mapping. This is probably bad!
    71 |          |                           | %define Direction_up    1
    72 |          |                           | %define Direction_down  2
    73 |          |                           | %define Direction_left  4
    74 |          |                           | %define Direction_right 8
    75 |          |                           | 
    76 |          |                           | %define SNAKE_START_LENGTH 25
    77 |          |                           | %define SNAKE_R 100
    78 |          |                           | %define SNAKE_G 220
    79 |          |                           | %define SNAKE_B 100
    80 |          |                           | %define SNAKE_RGB SNAKE_R, SNAKE_G, SNAKE_B
    81 |          |                           | %define APPLE_R 250
    82 |          |                           | %define APPLE_G 100
    83 |          |                           | %define APPLE_B 100
    84 |          |                           | %define APPLE_RGB APPLE_R, APPLE_G, APPLE_B
    85 |          |                           | 
    86 |          |                           | ; Simulator maxes out at some number of instructions per frame. Not measured number but at 32x32
    87 |          |                           | ; we can just about get 60fps. Above that not so much. Did some basic measurements and looks like
    88 |          |                           | ; it's the instruction decode that is the slow part. Thanks Casey ;). Joke obv.
    89 |          |                           | ; For snake, don't actually need to draw screen everytime, just draw pixels that need to update!
    90 |          |                           | %define DRAW_SCREEN_EVERY_FRAME 0
    91 |          |                           | 
    92 |          |                           | 
    93 |          |                           | ; -------------------------------------------------------------------
    94 |          |                           | ;                              Macros!
    95 |          |                           | ; -------------------------------------------------------------------
    96 |          |                           | ; @TODO implement call, ret (probably requires push, pop too) to use actual functions! Can only do macros
    97 |          |                           | ; for now.
    98 |          |                           | ; NOTE(Charles): Macros seemed like a great idea at first. But holy moly they make keeping track of
    99 |          |                           | ; which registers are used hard! (Or I guess only really cos I went and nested macros :roll:)
   100 |          |                           | 
   101 |          |                           | ; Don't have mul yet, just use adds!
   102 |          |                           | ; uses cx register as counter (loop instruction), result will be in ax.
   103 |          |                           | ; Only works for memory or immediate parameters atm!
   104 |          |                           | ; This loops b times so it is consderiably quicker if you put the smaller number in b!
   105 |          |                           | ; @TODO Implement mul instruction in simulator!
   106 |          |                           | ; ax multiply(a, b)
   107 |          |                           | %macro multiply 2
   108 |          |                           |     mov ax, 0
   109 |          |                           |     mov cx, 0  ; mov then add so can use zero flag
   110 |          |                           |     add cx, %2
   111 |          |                           |     jz %%done
   112 |          |                           |     %%who_needs_mul:
   113 |          |                           |         add ax, %1
   114 |          |                           |         loop %%who_needs_mul
   115 |          |                           |     %%done:
   116 |          |                           | %endmacro
   117 |          |                           | 
   118 |          |                           | %macro divide 2
   119 |          |                           |     ; @TODO can do a similar thing for divsion using subtraction.
   120 |          |                           |     ; if a is divisible by b, then loop doing a - b - b - b - b until you get 0. Number of loops equal answer!
   121 |          |                           | %endmacro
   122 |          |                           | 
   123 |          |                           | ; This is a no go for a few reasons atm:
   124 |          |                           | ; 1) without mul the multiply with large numbers is _very_ slow!
   125 |          |                           | ; 2) even if I had mul modding the result so its in a useful range seems hard (impossible?) without div and,
   126 |          |                           | ;    more cruicially jl, jg etc
   127 |          |                           | ; Sticking with table of random numbers with optional seed from host.
   128 |          |                           | %define LCG_INITIAL_SEED 1234
   129 |          |                           | %macro lcg_generate_random_number 0
   130 |          |                           |     ; Generate a pseudo-random number using a linear congruential generator (LCG)
   131 |          |                           |     ; Algorithm: Xn+1 = (a * Xn + c) mod m
   132 |          |                           |     %define LCG_A 11969
   133 |          |                           |     %define LCG_C 52429
   134 |          |                           |     %define LCG_M 65536 ; 2^16
   135 |          |                           |     multiply LCG_A, [lcg_seed] ; Welp, this is gonna be slow as shit...
   136 |          |                           |     add ax, LCG_C
   137 |          |                           |     mov [lcg_seed], ax ; Store new seed
   138 |          |                           | %endmacro
   139 |          |                           | 
   140 |          |                           | %define RNG_NUM 1000
   141 |          |                           | ; Returns in ax
   142 |          |                           | %macro generate_random_number 0
   143 |          |                           | mov bp, [random_number_index]
   144 |          |                           | add bp, bp ; have to multiply the index by two because the numbers are words!
   145 |          |                           | add bp, rng_4096_1000
   146 |          |                           | mov ax, [bp]
   147 |          |                           | add [random_number_index], word 1
   148 |          |                           | cmp [random_number_index], word RNG_NUM
   149 |          |                           | jne %%end
   150 |          |                           | mov [random_number_index], word 0
   151 |          |                           | %%end:
   152 |          |                           | %endmacro
   153 |          |                           | 
   154 |          |                           | ; Fill a pixel with color.
   155 |          |                           | ; void draw_pixel(x, y, r=255, g=255, b=255)
   156 |          |                           | ; Hmm this now uses ax, bx and cx (in the multiply macro)
   157 |          |                           | %macro draw_pixel 2-5 255, 255, 255
   158 |          |                           |     ; framebuffer + 4 * (width * y + x)
   159 |          |                           |     multiply [screen_size], %2 ; width * y
   160 |          |                           |     add ax, %1 ; + x
   161 |          |                           |     add ax, ax ; * 2
   162 |          |                           |     add ax, ax ; * 2
   163 |          |                           |     add ax, [frame_buffer]
   164 |          |                           |     mov bx, ax
   165 |          |                           |     mov byte [bx + 0], %5  ; Blue
   166 |          |                           |     mov byte [bx + 1], %4  ; Green
   167 |          |                           |     mov byte [bx + 2], %3  ; Red
   168 |          |                           |     ; mov word [bx], 0xffff
   169 |          |                           |     ; mov word [bx + 2], 0xffff
   170 |          |                           | %endmacro
   171 |          |                           | 
   172 |          |                           | ; Draw pixel with pre flattened coord z, in ax
   173 |          |                           | ; Q: Nasm docs say you can overload macros if the number of arguments is different, but I am
   174 |          |                           | ; getting a warning if this macro is called draw_pixel too?
   175 |          |                           | %macro draw_pixel_flat 0-3 255, 255, 255
   176 |          |                           |     ; framebuffer + 4 * (flat_coord)
   177 |          |                           |     add ax, ax ; * 2
   178 |          |                           |     add ax, ax ; * 2
   179 |          |                           |     add ax, [frame_buffer]
   180 |          |                           |     mov bx, ax
   181 |          |                           |     mov byte [bx + 0], %3  ; Blue
   182 |          |                           |     mov byte [bx + 1], %2  ; Green
   183 |          |                           |     mov byte [bx + 2], %1  ; Red
   184 |          |                           |     ; mov word [bx], 0xffff
   185 |          |                           |     ; mov word [bx + 2], 0xffff
   186 |          |                           | %endmacro
   187 |          |                           | 
   188 |          |                           | ; Compare pixel pointed to by bp to given immediate r, g, b
   189 |          |                           | %macro cmp_pixel_color 3
   190 |          |                           | ; Just checking first word for now @TODO check full rgb
   191 |          |                           | cmp [bp], word (%2 << 8) | %3
   192 |          |                           | %endmacro
   193 |          |                           | 
   194 |          |                           | ; Fewer instructions than doing the nested loop. 
   195 |          |                           | %macro clear_screen 1
   196 |          |                           |     mov bp, [frame_buffer]
   197 |          |                           |     mov cx, [frame_buffer_num_pixels]
   198 |          |                           |     mov al, %1
   199 |          |                           |     mov ah, %1
   200 |          |                           |     %%loop_start:
   201 |          |                           |         mov [bp], ax
   202 |          |                           |         mov [bp + 2], al
   203 |          |                           |         mov [bp + 3], byte 0xFF ; Do you respect alpha?
   204 |          |                           |         add bp, 4
   205 |          |                           |         loop %%loop_start
   206 |          |                           | %endmacro
   207 |          |                           | 
   208 |          |                           | %macro draw_title_screen 0
   209 |          |                           | ; Copy title screen to frame buffer. This is slow
   210 |          |                           | ; @TODO Implement ability for program to specificy the frame pointer via interrupt for fast switching!
   211 |          |                           | mov bp, [frame_buffer]
   212 |          |                           | mov bx, title_screen
   213 |          |                           | mov cx, [frame_buffer_num_pixels]
   214 |          |                           | mov di, 0
   215 |          |                           | %%copy_title_screen_loop:
   216 |          |                           |     mov ax, [bx + di]
   217 |          |                           |     mov [bp + di], ax
   218 |          |                           |     mov ax, [bx + di + 2]
   219 |          |                           |     ; mov [bp + di + 2], ax
   220 |          |                           |     ; @HACK It didn't affect me but TheGag96 trying to run this wanted 0xFF in alpha channel.
   221 |          |                           |     ; title screen image has alpha < 0xFF for some pixels. Fix that up here. Should really just fix
   222 |          |                           |     ; the image. Adds an extra frame_buffer_num_pixels instructions.
   223 |          |                           |     mov [bp + di + 2], al
   224 |          |                           |     mov [bp + di + 3], byte 0xFF
   225 |          |                           |     add di, 4
   226 |          |                           |     loop %%copy_title_screen_loop
   227 |          |                           | %endmacro
   228 |          |                           | 
   229 |          |                           | 
   230 |          |                           | ; -------------------------------------------------------------------
   231 |          |                           | ;                     Game Code Starts Here!
   232 |          |                           | ; -------------------------------------------------------------------
   233 |          |                           | ; NOTE(Charles): Pretty needlessly dynamically done.
   234 |          |                           | multiply [screen_size], [screen_size]
   235 | 00000000 | B80000                 <1>|  mov ax, 0
   236 | 00000003 | B90000                 <1>|  mov cx, 0
   237 | 00000006 | 030E[3404]             <1>|  add cx, %2
   238 | 0000000A | 7406                   <1>|  jz %%done
   239 |          |                        <1>|  %%who_needs_mul:
   240 | 0000000C | 0306[3404]             <1>|  add ax, %1
   241 | 00000010 | E2FA                   <1>|  loop %%who_needs_mul
   242 |          |                        <1>|  %%done:
   243 | 00000012 | A3[2E04]                  | mov [frame_buffer_num_pixels], ax
   244 | 00000015 | 01C0                      | add ax, ax ; *4
   245 | 00000017 | 01C0                      | add ax, ax 
   246 | 00000019 | A3[2C04]                  | mov [frame_buffer_num_bytes], ax
   247 |          |                           | 
   248 |          |                           | ; Set initial game state based on whether title screen is present. 
   249 | 0000001C | C706[2604]0100            | mov [game_state], word GAME_STATE_PLAY
   250 | 00000022 | B8[EE4C]                  | mov ax, end
   251 | 00000025 | BB[EE0C]                  | mov bx, title_screen
   252 | 00000028 | 39D8                      | cmp ax, bx
   253 | 0000002A | 740C                      | je no_title_screen
   254 | 0000002C | C706[2604]0000            | mov [game_state], word GAME_STATE_MENU
   255 | 00000032 | C706[2A04]0100            | mov [has_title_screen], word 1
   256 |          |                           | no_title_screen:
   257 |          |                           | 
   258 |          |                           | ; snake_init
   259 | 00000038 | A1[2404]                  | mov ax, [program_size]
   260 | 0000003B | 0306[2C04]                | add ax, [frame_buffer_num_bytes]
   261 | 0000003F | A3[3204]                  | mov [snake], ax
   262 |          |                           | 
   263 |          |                           | ; MGH: Request frame buffer size using int 0x21 function 0x55 instead
   264 | 00000042 | B455                      | mov ah, 0x55
   265 | 00000044 | 8B1E[3404]                | mov bx, [screen_size]
   266 | 00000048 | 8B0E[3404]                | mov cx, [screen_size]
   267 | 0000004C | 8B16[3004]                | mov dx, [frame_buffer]
   268 | 00000050 | CD21                      | int 0x21
   269 |          |                           | 
   270 |          |                           | ; MGH: My nasm doesn't like `!`, so use `== 0` instead
   271 |          |                           | %if DRAW_SCREEN_EVERY_FRAME == 0
   272 |          |                           | ; Draw background
   273 |          |                           | ; Have to use constant color so that when we are "deleting" snake parts we know what color to use.
   274 |          |                           | ; @TODO If did want nicer background could load it into memory separate to frame buffer to refer to!
   275 |          |                           | ; Frame buffer sits just after the code.
   276 |          |                           | clear_screen screen_color
   277 | 00000052 | 8B2E[3004]             <1>|  mov bp, [frame_buffer]
   278 | 00000056 | 8B0E[2E04]             <1>|  mov cx, [frame_buffer_num_pixels]
   279 | 0000005A | B01E                   <1>|  mov al, %1
   280 | 0000005C | B41E                   <1>|  mov ah, %1
   281 |          |                        <1>|  %%loop_start:
   282 | 0000005E | 894600                 <1>|  mov [bp], ax
   283 | 00000061 | 884602                 <1>|  mov [bp + 2], al
   284 | 00000064 | C64603FF               <1>|  mov [bp + 3], byte 0xFF
   285 | 00000068 | 83C504                 <1>|  add bp, 4
   286 | 0000006B | E2F1                   <1>|  loop %%loop_start
   287 |          |                           | %endif
   288 |          |                           | 
   289 | 0000006D | 833E[2604]01              | cmp [game_state], word GAME_STATE_PLAY
   290 | 00000072 | 742F                      | je start_playing
   291 |          |                           | draw_title_screen
   292 |          |                        <1>| 
   293 |          |                        <1>| 
   294 | 00000074 | 8B2E[3004]             <1>| mov bp, [frame_buffer]
   295 | 00000078 | BB[EE0C]               <1>| mov bx, title_screen
   296 | 0000007B | 8B0E[2E04]             <1>| mov cx, [frame_buffer_num_pixels]
   297 | 0000007F | BF0000                 <1>| mov di, 0
   298 |          |                        <1>| %%copy_title_screen_loop:
   299 | 00000082 | 8B01                   <1>|  mov ax, [bx + di]
   300 | 00000084 | 8903                   <1>|  mov [bp + di], ax
   301 | 00000086 | 8B4102                 <1>|  mov ax, [bx + di + 2]
   302 |          |                        <1>| 
   303 |          |                        <1>| 
   304 |          |                        <1>| 
   305 |          |                        <1>| 
   306 | 00000089 | 884302                 <1>|  mov [bp + di + 2], al
   307 | 0000008C | C64303FF               <1>|  mov [bp + di + 3], byte 0xFF
   308 | 00000090 | 83C704                 <1>|  add di, 4
   309 | 00000093 | E2ED                   <1>|  loop %%copy_title_screen_loop
   310 |          |                           | state_title_screen:
   311 | 00000095 | BDFEFF                    | mov bp, REGISTER_INPUT
   312 | 00000098 | 8B4600                    | mov ax, [bp]
   313 | 0000009B | 83F800                    | cmp ax, 0
   314 | 0000009E | 7503                      | jne start_playing
   315 | 000000A0 | E96803                    | jmp update_end
   316 |          |                           | 
   317 |          |                           | start_playing:
   318 | 000000A3 | C706FEFF0000              | mov [REGISTER_INPUT], word 0 ; clear the input used to start the game so we start in correct direction!
   319 | 000000A9 | C706[2604]0100            | mov [game_state], word GAME_STATE_PLAY
   320 |          |                           | clear_screen screen_color
   321 | 000000AF | 8B2E[3004]             <1>|  mov bp, [frame_buffer]
   322 | 000000B3 | 8B0E[2E04]             <1>|  mov cx, [frame_buffer_num_pixels]
   323 | 000000B7 | B01E                   <1>|  mov al, %1
   324 | 000000B9 | B41E                   <1>|  mov ah, %1
   325 |          |                        <1>|  %%loop_start:
   326 | 000000BB | 894600                 <1>|  mov [bp], ax
   327 | 000000BE | 884602                 <1>|  mov [bp + 2], al
   328 | 000000C1 | C64603FF               <1>|  mov [bp + 3], byte 0xFF
   329 | 000000C5 | 83C504                 <1>|  add bp, 4
   330 | 000000C8 | E2F1                   <1>|  loop %%loop_start
   331 |          |                           | reset:
   332 | 000000CA | B81900                    | mov ax, SNAKE_START_LENGTH
   333 | 000000CD | C706[2804]0000            | mov [score], word 0
   334 |          |                           | 
   335 | 000000D3 | 8B2E[3204]                | mov bp, [snake]
   336 | 000000D7 | 894600                    | mov [bp], ax ; snake.length = SNAKE_START_LENGTH
   337 | 000000DA | 83E801                    | sub ax, 1
   338 | 000000DD | 894602                    | mov [bp + 2], ax; snake.head = bla
   339 |          |                           | 
   340 |          |                           | 
   341 |          |                           | %define SNAKE_START SCREEN_SIZE / 2
   342 | 000000E0 | C706[3604]2000            | mov [snake_x], word SNAKE_START
   343 | 000000E6 | 832E[3604]01              | sub [snake_x], word 1 ; @HACK to align snake_x with snake parts
   344 | 000000EB | C706[3804]2000            | mov [snake_y], word SNAKE_START
   345 | 000000F1 | C706[3C04]0800            | mov [direction], word Direction_right
   346 |          |                           | 
   347 |          |                           | ; No bounds checking for if the start length puts us off screen!
   348 | 000000F7 | 8B4E00                    | mov cx, [bp]
   349 | 000000FA | 83C504                    | add bp, 4 ; bp = snake.parts
   350 |          |                           | init_snake_parts:
   351 | 000000FD | BB2000                    |     mov bx, SNAKE_START
   352 | 00000100 | 895E02                    |     mov [bp + 2], bx ; y
   353 | 00000103 | 29CB                      |     sub bx, cx
   354 | 00000105 | 895E00                    |     mov [bp], bx ; x
   355 | 00000108 | 83C504                    |     add bp, 4
   356 | 0000010B | E2F0                      |     loop init_snake_parts
   357 |          |                           | 
   358 |          |                           | %macro draw_snake 0
   359 |          |                           | mov bp, [snake]
   360 |          |                           | mov dx, [bp]
   361 |          |                           | add bp, 4 ; point to snake.parts
   362 |          |                           | %%draw_snake_loop:
   363 |          |                           |     draw_pixel [bp], [bp + 2], SNAKE_RGB;, SNAKE_G, SNAKE_B
   364 |          |                           |     add bp, 4
   365 |          |                           |     sub dx, 1
   366 |          |                           |     jnz %%draw_snake_loop
   367 |          |                           | %endmacro
   368 |          |                           | ; Should really do this during the init above, but awkward to do while not really fully supporting
   369 |          |                           | ; byte operations.
   370 |          |                           | draw_snake
   371 | 0000010D | 8B2E[3204]             <1>| mov bp, [snake]
   372 | 00000111 | 8B5600                 <1>| mov dx, [bp]
   373 | 00000114 | 83C504                 <1>| add bp, 4
   374 |          |                        <1>| %%draw_snake_loop:
   375 |          |                        <1>|  draw_pixel [bp], [bp + 2], SNAKE_RGB
   376 |          |                        <2>| 
   377 |          |                        <2>|  multiply [screen_size], %2
   378 | 00000117 | B80000                 <3>|  mov ax, 0
   379 | 0000011A | B90000                 <3>|  mov cx, 0
   380 | 0000011D | 034E02                 <3>|  add cx, %2
   381 | 00000120 | 7406                   <3>|  jz %%done
   382 |          |                        <3>|  %%who_needs_mul:
   383 | 00000122 | 0306[3404]             <3>|  add ax, %1
   384 | 00000126 | E2FA                   <3>|  loop %%who_needs_mul
   385 |          |                        <3>|  %%done:
   386 | 00000128 | 034600                 <2>|  add ax, %1
   387 | 0000012B | 01C0                   <2>|  add ax, ax
   388 | 0000012D | 01C0                   <2>|  add ax, ax
   389 | 0000012F | 0306[3004]             <2>|  add ax, [frame_buffer]
   390 | 00000133 | 89C3                   <2>|  mov bx, ax
   391 | 00000135 | C60764                 <2>|  mov byte [bx + 0], %5
   392 | 00000138 | C64701DC               <2>|  mov byte [bx + 1], %4
   393 | 0000013C | C6470264               <2>|  mov byte [bx + 2], %3
   394 |          |                        <2>| 
   395 |          |                        <2>| 
   396 | 00000140 | 83C504                 <1>|  add bp, 4
   397 | 00000143 | 83EA01                 <1>|  sub dx, 1
   398 | 00000146 | 75CF                   <1>|  jnz %%draw_snake_loop
   399 |          |                           | 
   400 |          |                           | ; apple_init
   401 |          |                           | %macro spawn_apple 0
   402 |          |                           |     ; This can potentially infinte loop!
   403 |          |                           |     %%loop:
   404 |          |                           |         generate_random_number
   405 |          |                           |         ; check this position isn't occupied!
   406 |          |                           |         mov bp, ax
   407 |          |                           |         mov bp, bp
   408 |          |                           |         mov bp, bp
   409 |          |                           |         add bp, [frame_buffer]
   410 |          |                           |         cmp_pixel_color SCREEN_RGB
   411 |          |                           |         jne %%loop
   412 |          |                           |     draw_pixel_flat APPLE_RGB
   413 |          |                           |     ; Q: Do I actually even need to store this? Can just check color of frame buffer? I'll be checking frame
   414 |          |                           |     ; buffer to detect self collisions anyway.
   415 |          |                           |     mov [apple_position], ax 
   416 |          |                           | %endmacro
   417 |          |                           | spawn_apple
   418 |          |                        <1>| 
   419 |          |                        <1>|  %%loop:
   420 |          |                        <1>|  generate_random_number
   421 | 00000148 | 8B2E[4004]             <2>| mov bp, [random_number_index]
   422 | 0000014C | 01ED                   <2>| add bp, bp
   423 | 0000014E | 81C5[1E05]             <2>| add bp, rng_4096_1000
   424 | 00000152 | 8B4600                 <2>| mov ax, [bp]
   425 | 00000155 | 8306[4004]01           <2>| add [random_number_index], word 1
   426 | 0000015A | 813E[4004]E803         <2>| cmp [random_number_index], word RNG_NUM
   427 | 00000160 | 7506                   <2>| jne %%end
   428 | 00000162 | C706[4004]0000         <2>| mov [random_number_index], word 0
   429 |          |                        <2>| %%end:
   430 |          |                        <1>| 
   431 | 00000168 | 89C5                   <1>|  mov bp, ax
   432 | 0000016A | 89ED                   <1>|  mov bp, bp
   433 | 0000016C | 89ED                   <1>|  mov bp, bp
   434 | 0000016E | 032E[3004]             <1>|  add bp, [frame_buffer]
   435 |          |                        <1>|  cmp_pixel_color SCREEN_RGB
   436 |          |                        <2>| 
   437 | 00000172 | 817E001E1E             <2>| cmp [bp], word (%2 << 8) | %3
   438 | 00000177 | 75CF                   <1>|  jne %%loop
   439 |          |                        <1>|  draw_pixel_flat APPLE_RGB
   440 |          |                        <2>| 
   441 | 00000179 | 01C0                   <2>|  add ax, ax
   442 | 0000017B | 01C0                   <2>|  add ax, ax
   443 | 0000017D | 0306[3004]             <2>|  add ax, [frame_buffer]
   444 | 00000181 | 89C3                   <2>|  mov bx, ax
   445 | 00000183 | C60764                 <2>|  mov byte [bx + 0], %3
   446 | 00000186 | C6470164               <2>|  mov byte [bx + 1], %2
   447 | 0000018A | C64702FA               <2>|  mov byte [bx + 2], %1
   448 |          |                        <2>| 
   449 |          |                        <2>| 
   450 |          |                        <1>| 
   451 |          |                        <1>| 
   452 | 0000018E | A3[3A04]               <1>|  mov [apple_position], ax
   453 |          |                           | 
   454 |          |                           | do_one_frame:
   455 |          |                           | ; Read input
   456 | 00000191 | A1FEFF                    | mov ax, [REGISTER_INPUT]
   457 |          |                           | 
   458 |          |                           | ; Up Key
   459 | 00000194 | 83F801                    | cmp ax, INPUT_UP
   460 | 00000197 | 750F                      | jne up_not_pressed
   461 |          |                           | ; Can't change to up if we are currently going down.
   462 | 00000199 | 833E[3C04]02              | cmp [direction], word Direction_down
   463 | 0000019E | 7473                      | je read_input_end
   464 | 000001A0 | C706[3C04]0100            | mov [direction], word Direction_up
   465 | 000001A6 | EB6B                      | jmp read_input_end
   466 |          |                           | up_not_pressed:
   467 |          |                           | 
   468 |          |                           | ; Down Key
   469 | 000001A8 | 83F802                    | cmp ax, INPUT_DOWN
   470 | 000001AB | 750F                      | jne down_not_pressed
   471 |          |                           | ; Can't change to down if we are currently going up.
   472 | 000001AD | 833E[3C04]01              | cmp [direction], word Direction_up
   473 | 000001B2 | 745F                      | je read_input_end
   474 | 000001B4 | C706[3C04]0200            | mov [direction], word Direction_down
   475 | 000001BA | EB57                      | jmp read_input_end
   476 |          |                           | down_not_pressed:
   477 |          |                           | 
   478 |          |                           | ; Left Key
   479 | 000001BC | 83F804                    | cmp ax, INPUT_LEFT
   480 | 000001BF | 750F                      | jne left_not_pressed
   481 |          |                           | ; Can't change to left if we are currently going right.
   482 | 000001C1 | 833E[3C04]08              | cmp [direction], word Direction_right
   483 | 000001C6 | 744B                      | je read_input_end
   484 | 000001C8 | C706[3C04]0400            | mov [direction], word Direction_left
   485 | 000001CE | EB43                      | jmp read_input_end
   486 |          |                           | left_not_pressed:
   487 |          |                           | 
   488 |          |                           | ; Right Key
   489 | 000001D0 | 83F808                    | cmp ax, INPUT_RIGHT
   490 | 000001D3 | 750F                      | jne right_not_pressed
   491 |          |                           | ; Can't change to right if we are currently going left.
   492 | 000001D5 | 833E[3C04]04              | cmp [direction], word Direction_left
   493 | 000001DA | 7437                      | je read_input_end
   494 | 000001DC | C706[3C04]0800            | mov [direction], word Direction_right
   495 | 000001E2 | EB2F                      | jmp read_input_end
   496 |          |                           | right_not_pressed:
   497 |          |                           | 
   498 |          |                           | ; Menu Key
   499 | 000001E4 | 83F810                    | cmp ax, INPUT_MENU
   500 | 000001E7 | 752A                      | jne menu_not_pressed
   501 | 000001E9 | C706[2604]0000            | mov [game_state], word GAME_STATE_MENU
   502 |          |                           | draw_title_screen
   503 |          |                        <1>| 
   504 |          |                        <1>| 
   505 | 000001EF | 8B2E[3004]             <1>| mov bp, [frame_buffer]
   506 | 000001F3 | BB[EE0C]               <1>| mov bx, title_screen
   507 | 000001F6 | 8B0E[2E04]             <1>| mov cx, [frame_buffer_num_pixels]
   508 | 000001FA | BF0000                 <1>| mov di, 0
   509 |          |                        <1>| %%copy_title_screen_loop:
   510 | 000001FD | 8B01                   <1>|  mov ax, [bx + di]
   511 | 000001FF | 8903                   <1>|  mov [bp + di], ax
   512 | 00000201 | 8B4102                 <1>|  mov ax, [bx + di + 2]
   513 |          |                        <1>| 
   514 |          |                        <1>| 
   515 |          |                        <1>| 
   516 |          |                        <1>| 
   517 | 00000204 | 884302                 <1>|  mov [bp + di + 2], al
   518 | 00000207 | C64303FF               <1>|  mov [bp + di + 3], byte 0xFF
   519 | 0000020B | 83C704                 <1>|  add di, 4
   520 | 0000020E | E2ED                   <1>|  loop %%copy_title_screen_loop
   521 | 00000210 | E9F801                    | jmp update_end
   522 |          |                           | menu_not_pressed:
   523 |          |                           | 
   524 |          |                           | read_input_end:
   525 |          |                           | 
   526 |          |                           | 
   527 |          |                           | ; Update player position
   528 |          |                           | update_player_position:
   529 |          |                           | %define DEBUG_SNAKE_POSITION 0
   530 |          |                           | %if DEBUG_SNAKE_POSITION
   531 |          |                           | draw_pixel [snake_x], [snake_y], screen_color, screen_color, screen_color
   532 |          |                           | %endif
   533 |          |                           | 
   534 |          |                           | ; Handle left/right movement
   535 | 00000213 | A1[3604]                  | mov ax, [snake_x]
   536 |          |                           | 
   537 |          |                           | ; Move right
   538 | 00000216 | 833E[3C04]08              | cmp [direction], word Direction_right
   539 | 0000021B | 7402                      | je direction_is_right
   540 | 0000021D | EB11                      | jmp direction_not_right ; Too big a jump for conditional now!
   541 |          |                           | direction_is_right:
   542 |          |                           | ; Update the snake_x
   543 | 0000021F | 83C001                    | add ax, 1
   544 | 00000222 | 3B06[3404]                | cmp ax, [screen_size]
   545 | 00000226 | 7503                      | jne no_wrap_right
   546 | 00000228 | B80000                    | mov ax, 0
   547 |          |                           | no_wrap_right:
   548 | 0000022B | A3[3604]                  | mov [snake_x], ax
   549 | 0000022E | EB55                      | jmp update_player_position_end
   550 |          |                           | direction_not_right:
   551 |          |                           | 
   552 |          |                           | ; Move left
   553 | 00000230 | 833E[3C04]04              | cmp [direction], word Direction_left
   554 | 00000235 | 7402                      | je direction_is_left
   555 | 00000237 | EB13                      | jmp direction_not_left
   556 |          |                           | direction_is_left:
   557 |          |                           | ; Update the snake_x
   558 | 00000239 | 83C0FF                    | add ax, -1
   559 | 0000023C | 83F8FF                    | cmp ax, -1
   560 | 0000023F | 7506                      | jne no_wrap_left
   561 | 00000241 | A1[3404]                  | mov ax, [screen_size]
   562 | 00000244 | 83E801                    | sub ax, 1
   563 |          |                           | no_wrap_left:
   564 | 00000247 | A3[3604]                  | mov [snake_x], ax
   565 | 0000024A | EB39                      | jmp update_player_position_end
   566 |          |                           | direction_not_left:
   567 |          |                           | 
   568 |          |                           | ; Handle up/down movement
   569 | 0000024C | A1[3804]                  | mov ax, [snake_y]
   570 |          |                           | 
   571 |          |                           | ; Move up
   572 | 0000024F | 833E[3C04]01              | cmp [direction], word Direction_up
   573 | 00000254 | 7402                      | je direction_is_up
   574 | 00000256 | EB11                      | jmp direction_not_up
   575 |          |                           | direction_is_up:
   576 |          |                           | ; Update the snake_y
   577 | 00000258 | 83C001                    | add ax, 1
   578 | 0000025B | 3B06[3404]                | cmp ax, [screen_size]
   579 | 0000025F | 7503                      | jne no_wrap_up
   580 | 00000261 | B80000                    | mov ax, 0
   581 |          |                           | no_wrap_up:
   582 | 00000264 | A3[3804]                  | mov [snake_y], ax
   583 | 00000267 | EB1C                      | jmp update_player_position_end
   584 |          |                           | direction_not_up:
   585 |          |                           | 
   586 |          |                           | ; Move down
   587 | 00000269 | 833E[3C04]02              | cmp [direction], word Direction_down
   588 | 0000026E | 7402                      | je direction_is_down 
   589 | 00000270 | EB13                      | jmp direction_not_down
   590 |          |                           | direction_is_down:
   591 |          |                           | ; Update the snake_y
   592 | 00000272 | 83C0FF                    | add ax, -1
   593 | 00000275 | 83F8FF                    | cmp ax, -1
   594 | 00000278 | 7506                      | jne no_wrap_down
   595 | 0000027A | A1[3404]                  | mov ax, [screen_size]
   596 | 0000027D | 83E801                    | sub ax, 1
   597 |          |                           | no_wrap_down:
   598 | 00000280 | A3[3804]                  | mov [snake_y], ax
   599 | 00000283 | EB00                      | jmp update_player_position_end
   600 |          |                           | direction_not_down:
   601 |          |                           | 
   602 |          |                           | update_player_position_end:
   603 |          |                           | 
   604 |          |                           | ; Check what the new x, y contains. Apple, snake or nothing
   605 |          |                           | 
   606 |          |                           | ; Given x, y coord but the address of the pixel into ax
   607 |          |                           | %macro get_pixel 2
   608 |          |                           | multiply [screen_size], %2 ; width * y
   609 |          |                           | add ax, %1 ; + x
   610 |          |                           | add ax, ax ; * 2
   611 |          |                           | add ax, ax ; * 2
   612 |          |                           | add ax, [frame_buffer]
   613 |          |                           | %endmacro
   614 |          |                           | 
   615 |          |                           | get_pixel [snake_x], [snake_y]
   616 |          |                        <1>| multiply [screen_size], %2
   617 | 00000285 | B80000                 <2>|  mov ax, 0
   618 | 00000288 | B90000                 <2>|  mov cx, 0
   619 | 0000028B | 030E[3804]             <2>|  add cx, %2
   620 | 0000028F | 7406                   <2>|  jz %%done
   621 |          |                        <2>|  %%who_needs_mul:
   622 | 00000291 | 0306[3404]             <2>|  add ax, %1
   623 | 00000295 | E2FA                   <2>|  loop %%who_needs_mul
   624 |          |                        <2>|  %%done:
   625 | 00000297 | 0306[3604]             <1>| add ax, %1
   626 | 0000029B | 01C0                   <1>| add ax, ax
   627 | 0000029D | 01C0                   <1>| add ax, ax
   628 | 0000029F | 0306[3004]             <1>| add ax, [frame_buffer]
   629 | 000002A3 | 89C5                      | mov bp, ax
   630 |          |                           | cmp_pixel_color SNAKE_RGB
   631 |          |                        <1>| 
   632 | 000002A5 | 817E0064DC             <1>| cmp [bp], word (%2 << 8) | %3
   633 | 000002AA | 751E                      | jne i_atent_dead
   634 |          |                           | ; Just clearing whole screen for now, will be slow
   635 |          |                           | ; @TODO clear all snake parts and apple, not entire screen.
   636 |          |                           | ; I actually kind of like the delay when you die that this causes so not doing this because would then need
   637 |          |                           | ; to implement that delay!
   638 |          |                           | clear_screen screen_color
   639 | 000002AC | 8B2E[3004]             <1>|  mov bp, [frame_buffer]
   640 | 000002B0 | 8B0E[2E04]             <1>|  mov cx, [frame_buffer_num_pixels]
   641 | 000002B4 | B01E                   <1>|  mov al, %1
   642 | 000002B6 | B41E                   <1>|  mov ah, %1
   643 |          |                        <1>|  %%loop_start:
   644 | 000002B8 | 894600                 <1>|  mov [bp], ax
   645 | 000002BB | 884602                 <1>|  mov [bp + 2], al
   646 | 000002BE | C64603FF               <1>|  mov [bp + 3], byte 0xFF
   647 | 000002C2 | 83C504                 <1>|  add bp, 4
   648 | 000002C5 | E2F1                   <1>|  loop %%loop_start
   649 | 000002C7 | E900FE                    | jmp reset
   650 |          |                           | 
   651 |          |                           | i_atent_dead:
   652 |          |                           | ; Either we eat an apple and grow, or just move snake. Either way we need the to increment the head!
   653 | 000002CA | 8B1E[3204]                | mov bx, [snake]
   654 | 000002CE | 8B4F02                    | mov cx, [bx + 2] ; snake.head
   655 | 000002D1 | 83C101                    | add cx, 1;
   656 | 000002D4 | 3B0F                      | cmp cx, [bx]
   657 | 000002D6 | 7503                      | jne no_wrap_head
   658 | 000002D8 | B90000                    | mov cx, 0
   659 |          |                           | no_wrap_head:
   660 | 000002DB | 894F02                    | mov [bx + 2], cx ; snake.head = new_head_index
   661 |          |                           | 
   662 |          |                           | cmp_pixel_color APPLE_RGB
   663 |          |                        <1>| 
   664 | 000002DE | 817E006464             <1>| cmp [bp], word (%2 << 8) | %3
   665 |          |                           | ; @TODO I had to change to unconditnal jump here because lots instrucitnos. but many instrucitons below
   666 |          |                           | ; can be removed then this might go back to unconditnoial (if want to save more instructions)
   667 | 000002E3 | 7403                      | je eaten_an_apple
   668 | 000002E5 | E9B800                    | jmp no_apple
   669 |          |                           | 
   670 |          |                           | eaten_an_apple:
   671 | 000002E8 | 8306[2804]01              | add [score], word 1
   672 |          |                           | spawn_apple
   673 |          |                        <1>| 
   674 |          |                        <1>|  %%loop:
   675 |          |                        <1>|  generate_random_number
   676 | 000002ED | 8B2E[4004]             <2>| mov bp, [random_number_index]
   677 | 000002F1 | 01ED                   <2>| add bp, bp
   678 | 000002F3 | 81C5[1E05]             <2>| add bp, rng_4096_1000
   679 | 000002F7 | 8B4600                 <2>| mov ax, [bp]
   680 | 000002FA | 8306[4004]01           <2>| add [random_number_index], word 1
   681 | 000002FF | 813E[4004]E803         <2>| cmp [random_number_index], word RNG_NUM
   682 | 00000305 | 7506                   <2>| jne %%end
   683 | 00000307 | C706[4004]0000         <2>| mov [random_number_index], word 0
   684 |          |                        <2>| %%end:
   685 |          |                        <1>| 
   686 | 0000030D | 89C5                   <1>|  mov bp, ax
   687 | 0000030F | 89ED                   <1>|  mov bp, bp
   688 | 00000311 | 89ED                   <1>|  mov bp, bp
   689 | 00000313 | 032E[3004]             <1>|  add bp, [frame_buffer]
   690 |          |                        <1>|  cmp_pixel_color SCREEN_RGB
   691 |          |                        <2>| 
   692 | 00000317 | 817E001E1E             <2>| cmp [bp], word (%2 << 8) | %3
   693 | 0000031C | 75CF                   <1>|  jne %%loop
   694 |          |                        <1>|  draw_pixel_flat APPLE_RGB
   695 |          |                        <2>| 
   696 | 0000031E | 01C0                   <2>|  add ax, ax
   697 | 00000320 | 01C0                   <2>|  add ax, ax
   698 | 00000322 | 0306[3004]             <2>|  add ax, [frame_buffer]
   699 | 00000326 | 89C3                   <2>|  mov bx, ax
   700 | 00000328 | C60764                 <2>|  mov byte [bx + 0], %3
   701 | 0000032B | C6470164               <2>|  mov byte [bx + 1], %2
   702 | 0000032F | C64702FA               <2>|  mov byte [bx + 2], %1
   703 |          |                        <2>| 
   704 |          |                        <2>| 
   705 |          |                        <1>| 
   706 |          |                        <1>| 
   707 | 00000333 | A3[3A04]               <1>|  mov [apple_position], ax
   708 |          |                           | 
   709 |          |                           | ; Grow the snake!
   710 | 00000336 | 8B2E[3204]                | mov bp, [snake]
   711 | 0000033A | 83C504                    | add bp, 4 ; bx = snake.parts
   712 |          |                           | ; bp -> snake.parts
   713 |          |                           | ; cx == snake.head
   714 | 0000033D | 01C9                      | add cx, cx 
   715 | 0000033F | 01C9                      | add cx, cx ; cx * 4 (cx is index but size of part is 4 [2xu16])
   716 | 00000341 | 01CD                      | add bp, cx ; bp = &snake.parts[snake.head]
   717 |          |                           | ; move all parts from snake.head (new_index) -> snake.length up one
   718 |          |                           | ; @TODO being bit lazy with registers here, can remove some of these instructinos.
   719 | 00000343 | 8B1E[3204]                | mov bx, [snake]
   720 | 00000347 | 8B0F                      | mov cx, [bx]     ; cx = snake.length - snake.head
   721 | 00000349 | 2B4F02                    | sub cx, [bx + 2] ; -
   722 | 0000034C | 01C9                      | add cx, cx ; bx -> snake.parts + snake.length
   723 | 0000034E | 01C9                      | add cx, cx ; -
   724 | 00000350 | 89EB                      | mov bx, bp ; -
   725 | 00000352 | 01CB                      | add bx, cx ; -
   726 | 00000354 | 83C303                    | add bx, 3
   727 |          |                           | ; @TODO re work this to go forward and not be so awkward lol!
   728 |          |                           | realloc_snake_part:
   729 |          |                           |     ; have to do a byte at a time to have negative address displacement I think. But why Am I doing this
   730 |          |                           |     ; backwards at all?!
   731 | 00000357 | 8A47FC                    |     mov al, [bx - 4] ; each part is 4 bytes
   732 | 0000035A | 8807                      |     mov [bx], al
   733 | 0000035C | 83EB01                    |     sub bx, 1
   734 | 0000035F | 39EB                      |     cmp bx, bp
   735 | 00000361 | 75F4                      |     jne realloc_snake_part
   736 |          |                           | 
   737 | 00000363 | 8B2E[3204]                | mov bp, [snake]
   738 | 00000367 | 83460001                  | add [bp], word 1 ; snake.length++
   739 |          |                           | ; set new head
   740 | 0000036B | A1[3604]                  | mov ax, [snake_x]
   741 | 0000036E | 8907                      | mov [bx], ax
   742 | 00000370 | A1[3804]                  | mov ax, [snake_y]
   743 | 00000373 | 894702                    | mov [bx + 2], ax
   744 |          |                           | ; draw new head
   745 |          |                           | draw_pixel [bx], [bx + 2], SNAKE_RGB
   746 |          |                        <1>| 
   747 |          |                        <1>|  multiply [screen_size], %2
   748 | 00000376 | B80000                 <2>|  mov ax, 0
   749 | 00000379 | B90000                 <2>|  mov cx, 0
   750 | 0000037C | 034F02                 <2>|  add cx, %2
   751 | 0000037F | 7406                   <2>|  jz %%done
   752 |          |                        <2>|  %%who_needs_mul:
   753 | 00000381 | 0306[3404]             <2>|  add ax, %1
   754 | 00000385 | E2FA                   <2>|  loop %%who_needs_mul
   755 |          |                        <2>|  %%done:
   756 | 00000387 | 0307                   <1>|  add ax, %1
   757 | 00000389 | 01C0                   <1>|  add ax, ax
   758 | 0000038B | 01C0                   <1>|  add ax, ax
   759 | 0000038D | 0306[3004]             <1>|  add ax, [frame_buffer]
   760 | 00000391 | 89C3                   <1>|  mov bx, ax
   761 | 00000393 | C60764                 <1>|  mov byte [bx + 0], %5
   762 | 00000396 | C64701DC               <1>|  mov byte [bx + 1], %4
   763 | 0000039A | C6470264               <1>|  mov byte [bx + 2], %3
   764 |          |                        <1>| 
   765 |          |                        <1>| 
   766 | 0000039E | EB6B                      | jmp update_end
   767 |          |                           | 
   768 |          |                           | no_apple:
   769 |          |                           | ; replace_tail_with_head
   770 |          |                           | ; @TODO maybe rework where bp, bx point, depending on how eating code plays out!
   771 | 000003A0 | 8B2E[3204]                | mov bp, [snake]
   772 | 000003A4 | 83C504                    | add bp, 4 ; bx = snake.parts
   773 |          |                           | ; bp -> snake.parts
   774 |          |                           | ; cx == snake.head
   775 | 000003A7 | 01C9                      | add cx, cx 
   776 | 000003A9 | 01C9                      | add cx, cx ; cx * 4 (cx is index but size of part is 4 [2 x u16])
   777 | 000003AB | 01CD                      | add bp, cx ; bp = &snake.parts[snake.head]
   778 |          |                           | ; clear tail
   779 |          |                           | draw_pixel [bp], [bp + 2], SCREEN_RGB
   780 |          |                        <1>| 
   781 |          |                        <1>|  multiply [screen_size], %2
   782 | 000003AD | B80000                 <2>|  mov ax, 0
   783 | 000003B0 | B90000                 <2>|  mov cx, 0
   784 | 000003B3 | 034E02                 <2>|  add cx, %2
   785 | 000003B6 | 7406                   <2>|  jz %%done
   786 |          |                        <2>|  %%who_needs_mul:
   787 | 000003B8 | 0306[3404]             <2>|  add ax, %1
   788 | 000003BC | E2FA                   <2>|  loop %%who_needs_mul
   789 |          |                        <2>|  %%done:
   790 | 000003BE | 034600                 <1>|  add ax, %1
   791 | 000003C1 | 01C0                   <1>|  add ax, ax
   792 | 000003C3 | 01C0                   <1>|  add ax, ax
   793 | 000003C5 | 0306[3004]             <1>|  add ax, [frame_buffer]
   794 | 000003C9 | 89C3                   <1>|  mov bx, ax
   795 | 000003CB | C6071E                 <1>|  mov byte [bx + 0], %5
   796 | 000003CE | C647011E               <1>|  mov byte [bx + 1], %4
   797 | 000003D2 | C647021E               <1>|  mov byte [bx + 2], %3
   798 |          |                        <1>| 
   799 |          |                        <1>| 
   800 |          |                           | ; set new head
   801 | 000003D6 | A1[3604]                  | mov ax, [snake_x]
   802 | 000003D9 | 894600                    | mov [bp], ax
   803 | 000003DC | A1[3804]                  | mov ax, [snake_y]
   804 | 000003DF | 894602                    | mov [bp + 2], ax
   805 |          |                           | ; draw new head
   806 |          |                           | draw_pixel [bp], [bp + 2], SNAKE_RGB
   807 |          |                        <1>| 
   808 |          |                        <1>|  multiply [screen_size], %2
   809 | 000003E2 | B80000                 <2>|  mov ax, 0
   810 | 000003E5 | B90000                 <2>|  mov cx, 0
   811 | 000003E8 | 034E02                 <2>|  add cx, %2
   812 | 000003EB | 7406                   <2>|  jz %%done
   813 |          |                        <2>|  %%who_needs_mul:
   814 | 000003ED | 0306[3404]             <2>|  add ax, %1
   815 | 000003F1 | E2FA                   <2>|  loop %%who_needs_mul
   816 |          |                        <2>|  %%done:
   817 | 000003F3 | 034600                 <1>|  add ax, %1
   818 | 000003F6 | 01C0                   <1>|  add ax, ax
   819 | 000003F8 | 01C0                   <1>|  add ax, ax
   820 | 000003FA | 0306[3004]             <1>|  add ax, [frame_buffer]
   821 | 000003FE | 89C3                   <1>|  mov bx, ax
   822 | 00000400 | C60764                 <1>|  mov byte [bx + 0], %5
   823 | 00000403 | C64701DC               <1>|  mov byte [bx + 1], %4
   824 | 00000407 | C6470264               <1>|  mov byte [bx + 2], %3
   825 |          |                        <1>| 
   826 |          |                        <1>| 
   827 |          |                           | 
   828 |          |                           | 
   829 |          |                           | %if DEBUG_SNAKE_POSITION
   830 |          |                           | draw_pixel [snake_x], [snake_y], 255, 0, 255
   831 |          |                           | %endif
   832 |          |                           | 
   833 |          |                           | update_end:
   834 |          |                           | ; @TMP debugging
   835 | 0000040B | A1[2804]                  | mov ax, [score]
   836 | 0000040E | 89C6                      | mov si, ax
   837 |          |                           | 
   838 |          |                           | %if DRAW_SCREEN_EVERY_FRAME
   839 |          |                           | ; Clear the screen
   840 |          |                           | ; Frame buffer sits just after the code.
   841 |          |                           | mov bp, [frame_buffer]
   842 |          |                           | 
   843 |          |                           | mov dx, [screen_size]
   844 |          |                           | y_loop_start:
   845 |          |                           |     
   846 |          |                           |     mov cx, [screen_size]
   847 |          |                           |     x_loop_start:
   848 |          |                           |         mov byte [bp + 0], screen_color  ; Blue
   849 |          |                           |         mov byte [bp + 1], screen_color  ; Green
   850 |          |                           |         mov byte [bp + 2], cl  ; Red
   851 |          |                           |         ; mov byte [bp + 3], 255 ; Alpha
   852 |          |                           |         add bp, 4
   853 |          |                           |             
   854 |          |                           |         loop x_loop_start
   855 |          |                           |     
   856 |          |                           |     sub dx, 1
   857 |          |                           |     jnz y_loop_start
   858 |          |                           | 
   859 |          |                           | draw_snake
   860 |          |                           | %endif
   861 |          |                           | 
   862 |          |                           | ; Signal to hosting simualtor to draw frame and sleep till next frame
   863 |          |                           | ; There is something about on actualy 8086 used to call int 15h with ah=86h to do micro second sleeps but
   864 |          |                           | ; 1) details of it aren't obvious to me but also 2) that would require asm code to keep track of timings!
   865 |          |                           | ; MGH: Use int 0x21 function 0x56 instead
   866 | 00000410 | B456                      | mov ah, 0x56
   867 | 00000412 | CD21                      | int 0x21
   868 |          |                           | 
   869 |          |                           | ; @TODO: Clean up handling of menu screen. This is very spaghetti!
   870 | 00000414 | 833E[2604]01              | cmp [game_state], word GAME_STATE_PLAY
   871 | 00000419 | 7403                      | je is_playing
   872 | 0000041B | E977FC                    | jmp state_title_screen
   873 |          |                           | is_playing:
   874 |          |                           | ; NOTE(Charles): I actually _had_ to implement jmp to change the jnz that was here before because
   875 |          |                           | ; conditional jumps only have 1 byte offset. Once I had enough instruciotns I started getting weird assembled
   876 |          |                           | ; code. Eg I got a pop and a test instead of the jnz!
   877 | 0000041E | E970FD                    | jmp do_one_frame
   878 |          |                           | 
   879 |          |                           | 
   880 |          |                           | ; -------------------------------------------------------------------
   881 |          |                           | ;                               Data
   882 |          |                           | ; -------------------------------------------------------------------
   883 |          |                           | ; Need some way to mark data stuff to not be executed (or even decoded/printed?). Atm int3 will force us
   884 |          |                           | ; to break the loop
   885 | 00000421 | CC                        | int3
   886 | 00000422 | CC                        | int3
   887 | 00000423 | CC                        | int3
   888 |          |                           | ; NOTE(Charles): The below variable names are really just labels! eg `program_size: dw end` is equivalent.
   889 |          |                           | ; gets the size of the program so we can check we arent gonna run out of memory!
   890 | 00000424 | [EE4C]                    | program_size dw end
   891 | 00000426 | 0000                      | game_state dw 0 ; 0: MENU, 1: PLAY
   892 | 00000428 | 0000                      | score dw 0;
   893 | 0000042A | 0000                      | has_title_screen dw 0
   894 | 0000042C | 0000                      | frame_buffer_num_bytes dw 0
   895 | 0000042E | 0000                      | frame_buffer_num_pixels dw 0
   896 | 00000430 | [EE4C]                    | frame_buffer dw end
   897 | 00000432 | 0000                      | snake dw 0
   898 | 00000434 | 4000                      | screen_size dw SCREEN_SIZE; Using a variable instead of a constant as could then dynamically change screen size!
   899 |          |                           | ; Technically all the information we need is in the snake struct. But it is much more convienet
   900 |          |                           | ; to keep track of the current position in these statics!
   901 | 00000436 | 0000                      | snake_x dw 0
   902 | 00000438 | 0000                      | snake_y dw 0
   903 | 0000043A | 0000                      | apple_position dw 0 ; flattened coordinate to make easier to randomly generate.
   904 | 0000043C | 0000                      | direction dw 0
   905 | 0000043E | D204                      | rng_seed dw LCG_INITIAL_SEED
   906 | 00000440 | 0000                      | random_number_index dw 0
   907 |          |                           | ; rng_limt_number
   908 |          |                           | ; ", ".join([str(random.randint(0, 4096)) for _ in range(100)])
   909 |          |                           | ; When testing if want first apple to be in path use 2050
   910 | 00000442 | 76022008B20E360506-       | rng_4096_10    dw 630, 2080, 3762, 1334, 2310, 2790, 960, 3855, 3001, 1035
   911 | 0000044B | 09E60AC0030F0FB90B-       | ...
   912 | 00000454 | 0B04                      | ...
   913 | 00000456 | EA0E1309DF0E3A04BD-       | rng_4096_100   dw 3818, 2323, 3807, 1082, 2237, 1101, 1694, 1536, 71, 3289, 3184, 3167, 2734, 626, 3559, 2094, 2178, 1158, 4009, 2958, 3170, 367, 3947, 3555, 120, 4021, 645, 1329, 832, 3553, 2819, 2478, 1071, 1754, 
   914 | 0000045F | 084D049E0600064700-       | ...
   915 | 00000468 | D90C700C5F0CAE0A72-       | ...
   916 | 00000471 | 02E70D2E0882088604-       | ...
   917 | 0000047A | A90F8E0B620C6F016B-       | ...
   918 | 00000483 | 0FE30D7800B50F8502-       | ...
   919 | 0000048C | 31054003E10D030BAE-       | ...
   920 | 00000495 | 092F04DA062406FC0D-       | ...
   921 | 0000049E | CE040A08030FC00384-       | ...
   922 | 000004A7 | 0D2305630758041D09-       | ...
   923 | 000004B0 | 1307340CB401FD06BB-       | ...
   924 | 000004B9 | 0F8D0B17071002B903-       | ...
   925 | 000004C2 | AC03CB0FD801BA0754-       | ...
   926 | 000004CB | 094D070E0BC60AD00B-       | ...
   927 | 000004D4 | B002D20D0704BF085E-       | ...
   928 | 000004DD | 002B02900BD10F670D-       | ...
   929 | 000004E6 | B50497028B013105FB-       | ...
   930 | 000004EF | 0ECB014C0DE3037802-       | ...
   931 | 000004F8 | 940BB30DA5036A0864-       | ...
   932 | 00000501 | 096A01780F3B046607-       | ...
   933 | 0000050A | EA01270C4F07220892-       | ...
   934 | 00000513 | 0E7A0911093009EA0F-       | ...
   935 | 0000051C | 260C                      | ...
   936 | 0000051E | E70503039508D0086D-       | rng_4096_1000  dw 1511, 771, 2197, 2256, 1133, 1022, 3580, 1786, 2204, 3182, 713, 2126, 3942, 148, 3438, 2714, 1825, 1861, 2634, 3926, 872, 1327, 2635, 3078, 369, 2189, 1399, 323, 1200, 2015, 1470, 152, 3544, 3251, 
   937 | 00000527 | 04FE03FC0DFA069C08-       | ...
   938 | 00000530 | 6E0CC9024E08660F94-       | ...
   939 | 00000539 | 006E0D9A0A21074507-       | ...
   940 | 00000542 | 4A0A560F68032F054B-       | ...
   941 | 0000054B | 0A060C71018D087705-       | ...
   942 | 00000554 | 4301B004DF07BE0598-       | ...
   943 | 0000055D | 00D80DB30C6A02B109-       | ...
   944 | 00000566 | 90042500E7041603EC-       | ...
   945 | 0000056F | 0D150AD10081073304-       | ...
   946 | 00000578 | 210AAD04C508670F37-       | ...
   947 | 00000581 | 09D90F790D2D06F20B-       | ...
   948 | 0000058A | 9A0CC20947081D0B74-       | ...
   949 | 00000593 | 004C0B30076F03830A-       | ...
   950 | 0000059C | 2D06A6028707580561-       | ...
   951 | 000005A5 | 05610A500C7905F300-       | ...
   952 | 000005AE | A7066C05340AD30315-       | ...
   953 | 000005B7 | 0E0E077501DF0CE803-       | ...
   954 | 000005C0 | 4B09460B8007120C75-       | ...
   955 | 000005C9 | 0104059D0EE0032104-       | ...
   956 | 000005D2 | AE0BF00379098F06EB-       | ...
   957 | 000005DB | 0E3705E8027900A20E-       | ...
   958 | 000005E4 | 0D0649050500CF0767-       | ...
   959 | 000005ED | 0103079E0B53074806-       | ...
   960 | 000005F6 | AB01850F870EA306C1-       | ...
   961 | 000005FF | 03330A620D7F011005-       | ...
   962 | 00000608 | DB06950FE30F530759-       | ...
   963 | 00000611 | 02BB00900BFA08AC03-       | ...
   964 | 0000061A | 88016701EF00840383-       | ...
   965 | 00000623 | 0F10004B0663015107-       | ...
   966 | 0000062C | 3806CD086606840428-       | ...
   967 | 00000635 | 017002A20D840A0807-       | ...
   968 | 0000063E | 8F0490067A025908C7-       | ...
   969 | 00000647 | 0EEA0D710E0606B602-       | ...
   970 | 00000650 | 010718044A0BC50021-       | ...
   971 | 00000659 | 086B002509960E920B-       | ...
   972 | 00000662 | FF0E430CCE010D0961-       | ...
   973 | 0000066B | 084C06EE059801510A-       | ...
   974 | 00000674 | 9C0554041204FB0B0A-       | ...
   975 | 0000067D | 05C101DC0BE20C9C06-       | ...
   976 | 00000686 | D00FED00D5096607AD-       | ...
   977 | 0000068F | 06F40FF9020C03FF0B-       | ...
   978 | 00000698 | F80BE6078803410EA9-       | ...
   979 | 000006A1 | 0A1308EB0FC205FD0E-       | ...
   980 | 000006AA | 1709C802CD002F0B10-       | ...
   981 | 000006B3 | 097807290A250BD801-       | ...
   982 | 000006BC | 8C0A020B810F140E81-       | ...
   983 | 000006C5 | 02C2030303C2003F0B-       | ...
   984 | 000006CE | BC07FC0AF6052807D0-       | ...
   985 | 000006D7 | 01EF079F09150E2801-       | ...
   986 | 000006E0 | 7A0A750E90005C0DF3-       | ...
   987 | 000006E9 | 0F39032603E00D5E01-       | ...
   988 | 000006F2 | 700AB606D00E2607B7-       | ...
   989 | 000006FB | 024908E00547033E0C-       | ...
   990 | 00000704 | 370F8F09C104770F79-       | ...
   991 | 0000070D | 0CB8053F0AE10FB502-       | ...
   992 | 00000716 | 4E0B6F0FAE0FA308F4-       | ...
   993 | 0000071F | 0F560B7F03D40FBD08-       | ...
   994 | 00000728 | C5010309A40B610DD9-       | ...
   995 | 00000731 | 02390A520D22023E01-       | ...
   996 | 0000073A | A507B10D03055505E0-       | ...
   997 | 00000743 | 03DF031B06F30EA807-       | ...
   998 | 0000074C | 560311080C0097034B-       | ...
   999 | 00000755 | 000201950CD20F0C0D-       | ...
  1000 | 0000075E | 94084E08D20FDA0DB2-       | ...
  1001 | 00000767 | 016A080B010E04430A-       | ...
  1002 | 00000770 | 3105DB0F930B170F9B-       | ...
  1003 | 00000779 | 0DF206E105A906850F-       | ...
  1004 | 00000782 | 0500010288086C0C59-       | ...
  1005 | 0000078B | 06AC0A030C7F063806-       | ...
  1006 | 00000794 | 25042E0A540CFC0B11-       | ...
  1007 | 0000079D | 0BB208FA0DEB0AD90D-       | ...
  1008 | 000007A6 | 260E2B072403730F2E-       | ...
  1009 | 000007AF | 0475087603C40A3C07-       | ...
  1010 | 000007B8 | 7A06D7052903300D0C-       | ...
  1011 | 000007C1 | 09520406070D0CA10F-       | ...
  1012 | 000007CA | B30808000204020338-       | ...
  1013 | 000007D3 | 0FB60CF40CF004FB04-       | ...
  1014 | 000007DC | 370D8701720DC204BA-       | ...
  1015 | 000007E5 | 044C0DA9011400DD06-       | ...
  1016 | 000007EE | 8300E90CCC067F01C4-       | ...
  1017 | 000007F7 | 08DB07DE0F82044F06-       | ...
  1018 | 00000800 | 57076E01B7054C0EA1-       | ...
  1019 | 00000809 | 04B503C50577093B0B-       | ...
  1020 | 00000812 | B70B5E0C2B006103A3-       | ...
  1021 | 0000081B | 02210F0C06190AF303-       | ...
  1022 | 00000824 | FC04F20C2902800A1B-       | ...
  1023 | 0000082D | 018C08C009C70BEF0D-       | ...
  1024 | 00000836 | BF08BA031906EA04FC-       | ...
  1025 | 0000083F | 01050B0C02660BE409-       | ...
  1026 | 00000848 | C103E4038A03F90904-       | ...
  1027 | 00000851 | 08E80135044F099C07-       | ...
  1028 | 0000085A | 7C00B803BE0A01017E-       | ...
  1029 | 00000863 | 087D032E007500980C-       | ...
  1030 | 0000086C | 5D007E041F0E8F064D-       | ...
  1031 | 00000875 | 0DEA0C8106FC00A40A-       | ...
  1032 | 0000087E | 48064C007207DF0D45-       | ...
  1033 | 00000887 | 0C770B200774064A06-       | ...
  1034 | 00000890 | AF0A01081403180550-       | ...
  1035 | 00000899 | 00F50CAD09A90A7F0B-       | ...
  1036 | 000008A2 | 4303EA019A0A4408E2-       | ...
  1037 | 000008AB | 0EA50F870E0A00B30F-       | ...
  1038 | 000008B4 | 270BF400FE0D190BF7-       | ...
  1039 | 000008BD | 0F7F0F5A036401AD09-       | ...
  1040 | 000008C6 | 840EC8098208080AEE-       | ...
  1041 | 000008CF | 0CDC04760CC200AE09-       | ...
  1042 | 000008D8 | 270BA5054E0D430FF9-       | ...
  1043 | 000008E1 | 04D7073206D208C406-       | ...
  1044 | 000008EA | 130C470D600B110596-       | ...
  1045 | 000008F3 | 01B80EC50EA904780E-       | ...
  1046 | 000008FC | 9E0AE40FED05DB00E9-       | ...
  1047 | 00000905 | 08E9024C0530013307-       | ...
  1048 | 0000090E | CB0D850ACE0D84006F-       | ...
  1049 | 00000917 | 0AE20AEE03B309DE00-       | ...
  1050 | 00000920 | AE07390D0E0324021E-       | ...
  1051 | 00000929 | 0446044804EF07AD0C-       | ...
  1052 | 00000932 | 0E01750E800CE8045A-       | ...
  1053 | 0000093B | 08D4011D0AC0068309-       | ...
  1054 | 00000944 | 52098D0EFA0E1F017D-       | ...
  1055 | 0000094D | 0E4408F50B1905AA01-       | ...
  1056 | 00000956 | C809DC0599013009EC-       | ...
  1057 | 0000095F | 08040452032B0F240B-       | ...
  1058 | 00000968 | A307700C9508B408F4-       | ...
  1059 | 00000971 | 0ABB01A8071F05D000-       | ...
  1060 | 0000097A | C30AA5027B064B06C7-       | ...
  1061 | 00000983 | 0A91009D0C4F0B2B09-       | ...
  1062 | 0000098C | 83059B089209F00666-       | ...
  1063 | 00000995 | 098005530E570E2B03-       | ...
  1064 | 0000099E | 1901E20AD30B250D8D-       | ...
  1065 | 000009A7 | 0BD20E7F051606CF0F-       | ...
  1066 | 000009B0 | B407A9005F01750B82-       | ...
  1067 | 000009B9 | 07940D440E68007904-       | ...
  1068 | 000009C2 | F70ABD0F4F06630895-       | ...
  1069 | 000009CB | 00A9033F018A0C460D-       | ...
  1070 | 000009D4 | 5E044E05860D92023A-       | ...
  1071 | 000009DD | 08E00E400497019308-       | ...
  1072 | 000009E6 | BE05C806820EDF0283-       | ...
  1073 | 000009EF | 05FB00F006F3077E0B-       | ...
  1074 | 000009F8 | 8D0DB903F20FD80ADF-       | ...
  1075 | 00000A01 | 01D20B14077404C20D-       | ...
  1076 | 00000A0A | A003F30F120AE00DE0-       | ...
  1077 | 00000A13 | 0C1D0F44066101E40C-       | ...
  1078 | 00000A1C | 97070E0FC0009E02AF-       | ...
  1079 | 00000A25 | 05E60DBC05FA037003-       | ...
  1080 | 00000A2E | 9A073602E707920BEC-       | ...
  1081 | 00000A37 | 0FA9014B0D1E01DB0E-       | ...
  1082 | 00000A40 | 800297088D06BF005F-       | ...
  1083 | 00000A49 | 0C800A4E0F25071F08-       | ...
  1084 | 00000A52 | DE03D10089033B03B9-       | ...
  1085 | 00000A5B | 0BF50A1B038504D909-       | ...
  1086 | 00000A64 | 3D0E360B8406E40E4F-       | ...
  1087 | 00000A6D | 008006DA01B80E1F07-       | ...
  1088 | 00000A76 | BD03480E8F0F6708D0-       | ...
  1089 | 00000A7F | 0B9301D300910B730A-       | ...
  1090 | 00000A88 | 0E06D70B1E0B4F00E4-       | ...
  1091 | 00000A91 | 0322014D0C68097104-       | ...
  1092 | 00000A9A | 29070106E70BB80F1F-       | ...
  1093 | 00000AA3 | 0382090D0A200C390E-       | ...
  1094 | 00000AAC | 61090007130A050C47-       | ...
  1095 | 00000AB5 | 0F2807BF0DC101BC07-       | ...
  1096 | 00000ABE | AA01BE02640305085B-       | ...
  1097 | 00000AC7 | 0EA00A9D0C0D0FFB04-       | ...
  1098 | 00000AD0 | 3F04A2087F0ABE02B2-       | ...
  1099 | 00000AD9 | 00670EF5044B0A390A-       | ...
  1100 | 00000AE2 | 9E0A52057503450044-       | ...
  1101 | 00000AEB | 0DAF03D8024F0B2A0B-       | ...
  1102 | 00000AF4 | D1054A026503630B57-       | ...
  1103 | 00000AFD | 0AC1029101100BDF0C-       | ...
  1104 | 00000B06 | 740AD20EAD06A30807-       | ...
  1105 | 00000B0F | 0D7709BD087809EC02-       | ...
  1106 | 00000B18 | 360D38072E0AE609E1-       | ...
  1107 | 00000B21 | 06DF01510F9A0E390C-       | ...
  1108 | 00000B2A | 6E0DC700000AD20708-       | ...
  1109 | 00000B33 | 00B401A406B8019104-       | ...
  1110 | 00000B3C | 2209D6064B0F8100AA-       | ...
  1111 | 00000B45 | 097F08D50CDC047F08-       | ...
  1112 | 00000B4E | 64054509D20C2F0499-       | ...
  1113 | 00000B57 | 0BDF0A5E021D029B0A-       | ...
  1114 | 00000B60 | 4809CD05410E280192-       | ...
  1115 | 00000B69 | 006C0BC20AD90E380C-       | ...
  1116 | 00000B72 | 5303D50F900B5A03FC-       | ...
  1117 | 00000B7B | 0ED207F003BE017305-       | ...
  1118 | 00000B84 | CB0CFB016B0B170DC7-       | ...
  1119 | 00000B8D | 027100910F68002D0A-       | ...
  1120 | 00000B96 | E40D40003004F20430-       | ...
  1121 | 00000B9F | 0DD302BB096003ED0A-       | ...
  1122 | 00000BA8 | 8502980A2D0BB501B3-       | ...
  1123 | 00000BB1 | 070A0ACC08DE03AD06-       | ...
  1124 | 00000BBA | 3803D50818092F06F3-       | ...
  1125 | 00000BC3 | 0780038C0C3C0B900C-       | ...
  1126 | 00000BCC | 500E3F04B301D30388-       | ...
  1127 | 00000BD5 | 069900570F41048F06-       | ...
  1128 | 00000BDE | 6B0FB8064806A909C6-       | ...
  1129 | 00000BE7 | 011D0EE8082E039806-       | ...
  1130 | 00000BF0 | BD08950CF508940305-       | ...
  1131 | 00000BF9 | 0B15086A02040FB70E-       | ...
  1132 | 00000C02 | B90073013107750C52-       | ...
  1133 | 00000C0B | 0A0F06F1033A063500-       | ...
  1134 | 00000C14 | 470A2C05080CBC059B-       | ...
  1135 | 00000C1D | 0C8C04420B7B0D1A03-       | ...
  1136 | 00000C26 | 940C160A0F0F8E0733-       | ...
  1137 | 00000C2F | 06D0098A0C130AC908-       | ...
  1138 | 00000C38 | 28080A02900BC50088-       | ...
  1139 | 00000C41 | 0D770C6409750FF00E-       | ...
  1140 | 00000C4A | 7F00AF0DDD00650820-       | ...
  1141 | 00000C53 | 0DD30B2204CB0E310A-       | ...
  1142 | 00000C5C | 79071605BB0442093E-       | ...
  1143 | 00000C65 | 0E7B06E40FFF05C409-       | ...
  1144 | 00000C6E | 11075E0A8C0C7C0CAF-       | ...
  1145 | 00000C77 | 0D4301360AF50F1404-       | ...
  1146 | 00000C80 | 1C03CC08520C52036D-       | ...
  1147 | 00000C89 | 0A2F04C50C5D07C40F-       | ...
  1148 | 00000C92 | 7F0C2A081F051E016C-       | ...
  1149 | 00000C9B | 04610D4C01D60D8F00-       | ...
  1150 | 00000CA4 | 4C016C05B70B53049E-       | ...
  1151 | 00000CAD | 0BAE09A206530F2A02-       | ...
  1152 | 00000CB6 | 0E096807030DA908B3-       | ...
  1153 | 00000CBF | 07CC05740173087400-       | ...
  1154 | 00000CC8 | D90F5B0DE902FC070F-       | ...
  1155 | 00000CD1 | 05DA0121057C07AB0C-       | ...
  1156 | 00000CDA | 9006F60F210EF3099B-       | ...
  1157 | 00000CE3 | 08590A050E2E0E2405-       | ...
  1158 | 00000CEC | 9400                      | ...
  1159 |          |                           | ; Somethign weird is happening when using 10k. At some point the snake stops clearing its tail. Presumably
  1160 |          |                           | ; I'm overwriting some memory I shouldn't but I can't see where :shrug:.
  1161 |          |                           | ; 10k random numbers for snake is proooobably overkill anyway. It's almost as much memory as the frame buffer...
  1162 |          |                           | ; rng_4096_10000 dw 909, 3655, 4062, 2186, 1144, 2097, 2338, 235, 1071, 3344, 84, 3637, 3035, 1454, 533, 1205, 1369, 2584, 1584, 3986, 2731, 3914, 529, 3891, 1243, 2820, 3718, 292, 6, 1553, 1973, 3302, 2352, 605, 10
  1163 |          |                           | title_screen:
  1164 |          |                           | %ifdef USE_TITLE_SCREEN
  1165 |          |                           | %include "sim86_title_screen.dat"
  1166 | 00000CEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 3927777066, 36419062
  1167 | 00000CF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1168 | 00000D00 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1169 | 00000D09 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1170 | 00000D12 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1171 | 00000D1B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1172 | 00000D24 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1173 | 00000D2D | FF2A1F1DEA291413D9-    <1>| ...
  1174 | 00000D36 | 190A0DD613060CD618-    <1>| ...
  1175 | 00000D3F | 0A0FD6301515D65D2B-    <1>| ...
  1176 | 00000D48 | 22D6733627D67C3B2A-    <1>| ...
  1177 | 00000D51 | FF7D3B2AFF7C3C2AFF-    <1>| ...
  1178 | 00000D5A | 7E3B29FF7C3C29FF7F-    <1>| ...
  1179 | 00000D63 | 3D2AFF803E2BFF813E-    <1>| ...
  1180 | 00000D6C | 2BFF83402CFF83402C-    <1>| ...
  1181 | 00000D75 | FF84422CFF84422DFF-    <1>| ...
  1182 | 00000D7E | 86422DFF85412CFF85-    <1>| ...
  1183 | 00000D87 | 412CFF86422DFF8642-    <1>| ...
  1184 | 00000D90 | 2EFF86422DFF84412C-    <1>| ...
  1185 | 00000D99 | FF84412CFF84412CFF-    <1>| ...
  1186 | 00000DA2 | 86422CFF86412DFF88-    <1>| ...
  1187 | 00000DAB | 442DFF8B4531FF8C47-    <1>| ...
  1188 | 00000DB4 | 33FF8D4834FF8E4936-    <1>| ...
  1189 | 00000DBD | FF914C38FF934D39FF-    <1>| ...
  1190 | 00000DC6 | 944D3AFF904C39FF89-    <1>| ...
  1191 | 00000DCF | 4639FF7D4542FF7241-    <1>| ...
  1192 | 00000DD8 | 4AFF77413DFF522B2E-    <1>| ...
  1193 | 00000DE1 | FF22090DFF200B10FF-    <1>| ...
  1194 | 00000DEA | 26151EFF               <1>| ...
  1195 | 00000DEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4246609438, 4246609442, 4229635635, 42291074
  1196 | 00000DF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1197 | 00000E00 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1198 | 00000E09 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1199 | 00000E12 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1200 | 00000E1B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1201 | 00000E24 | 1EFF1E1E1EFD221E1E-    <1>| ...
  1202 | 00000E2D | FD331E1BFC210F13FC-    <1>| ...
  1203 | 00000E36 | 170B15FC180E1EFC1E-    <1>| ...
  1204 | 00000E3F | 1125FC2B1729FC4420-    <1>| ...
  1205 | 00000E48 | 26FC602C25FC7E3D2C-    <1>| ...
  1206 | 00000E51 | FF7F3D2BFF7E3C29FF-    <1>| ...
  1207 | 00000E5A | 7E3D2BFF803F2CFF81-    <1>| ...
  1208 | 00000E63 | 3E2BFF833F2CFF8240-    <1>| ...
  1209 | 00000E6C | 2CFF85422EFF86422E-    <1>| ...
  1210 | 00000E75 | FF87432EFF87432EFF-    <1>| ...
  1211 | 00000E7E | 87432EFF87432EFF87-    <1>| ...
  1212 | 00000E87 | 432EFF87432EFF8842-    <1>| ...
  1213 | 00000E90 | 2DFF87432EFF86422D-    <1>| ...
  1214 | 00000E99 | FF87422DFF89432EFF-    <1>| ...
  1215 | 00000EA2 | 8A442FFF89452FFF8B-    <1>| ...
  1216 | 00000EAB | 462FFF8F4732FF8E49-    <1>| ...
  1217 | 00000EB4 | 34FF8F4934FF8E4834-    <1>| ...
  1218 | 00000EBD | FF8D4734FF8A4633FF-    <1>| ...
  1219 | 00000EC6 | 854231FF783B2DFF6E-    <1>| ...
  1220 | 00000ECF | 342FFF5E3958FF3B23-    <1>| ...
  1221 | 00000ED8 | 4DFF442B54FF463065-    <1>| ...
  1222 | 00000EE1 | FF463368FF422D4EFF-    <1>| ...
  1223 | 00000EEA | 29141AFF               <1>| ...
  1224 | 00000EEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280229668, 4280426551, 42807516
  1225 | 00000EF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1226 | 00000F00 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1227 | 00000F09 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1228 | 00000F12 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1229 | 00000F1B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1230 | 00000F24 | 1EFF1E1E1EFF241F1F-    <1>| ...
  1231 | 00000F2D | FF372022FF261627FF-    <1>| ...
  1232 | 00000F36 | 281A3BFF32224EFF3F-    <1>| ...
  1233 | 00000F3F | 2C61FF432E60FF4227-    <1>| ...
  1234 | 00000F48 | 4BFF4E242FFF7B3B2C-    <1>| ...
  1235 | 00000F51 | FF823F2CFF833F2DFF-    <1>| ...
  1236 | 00000F5A | 7E3F2DFF84422EFF84-    <1>| ...
  1237 | 00000F63 | 412DFF86402EFF8542-    <1>| ...
  1238 | 00000F6C | 2FFF884330FF884330-    <1>| ...
  1239 | 00000F75 | FF87432EFF88442FFF-    <1>| ...
  1240 | 00000F7E | 8A4530FF89452FFF89-    <1>| ...
  1241 | 00000F87 | 442FFF89442FFF8A45-    <1>| ...
  1242 | 00000F90 | 30FF8B442FFF8A452F-    <1>| ...
  1243 | 00000F99 | FF8C4430FF8C4430FF-    <1>| ...
  1244 | 00000FA2 | 8F4631FF8E4732FF8E-    <1>| ...
  1245 | 00000FAB | 4832FF904933FF9149-    <1>| ...
  1246 | 00000FB4 | 34FF8D4733FF884430-    <1>| ...
  1247 | 00000FBD | FF823F2DFF7E3D2BFF-    <1>| ...
  1248 | 00000FC6 | 793B29FF73372BFF6C-    <1>| ...
  1249 | 00000FCF | 3846FF644388FF3922-    <1>| ...
  1250 | 00000FD8 | 60FF48347BFF33226D-    <1>| ...
  1251 | 00000FE1 | FF48378CFF6A55A9FF-    <1>| ...
  1252 | 00000FEA | 563E6BFF               <1>| ...
  1253 | 00000FEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280426275, 4281804088, 42834424
  1254 | 00000FF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1255 | 00001000 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1256 | 00001009 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1257 | 00001012 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1258 | 0000101B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1259 | 00001024 | 1EFF1E1E1EFF231F22-    <1>| ...
  1260 | 0000102D | FF382537FF372550FF-    <1>| ...
  1261 | 00001036 | 402E6AFF4A347AFF64-    <1>| ...
  1262 | 0000103F | 4A9AFF604595FF5D3F-    <1>| ...
  1263 | 00001048 | 8FFF512A46FF7C3B2E-    <1>| ...
  1264 | 00001051 | FF82402FFF8B4F40FF-    <1>| ...
  1265 | 0000105A | AE847FFFA87B74FF9C-    <1>| ...
  1266 | 00001063 | 6962FF8D4F43FF904F-    <1>| ...
  1267 | 0000106C | 43FF894432FF894531-    <1>| ...
  1268 | 00001075 | FF884632FF8A4733FF-    <1>| ...
  1269 | 0000107E | 8C4835FF8C4633FF8C-    <1>| ...
  1270 | 00001087 | 4632FF8D4733FF8D45-    <1>| ...
  1271 | 00001090 | 32FF8C4631FF8C4633-    <1>| ...
  1272 | 00001099 | FF854940FF8D4735FF-    <1>| ...
  1273 | 000010A2 | 8F4833FF8F4833FF8E-    <1>| ...
  1274 | 000010AB | 4831FF934A34FF944A-    <1>| ...
  1275 | 000010B4 | 36FF8E4834FF864330-    <1>| ...
  1276 | 000010BD | FF833F2FFF803E2DFF-    <1>| ...
  1277 | 000010C6 | 7C3B2DFF763933FF81-    <1>| ...
  1278 | 000010CF | 538CFF7755ABFF5438-    <1>| ...
  1279 | 000010D8 | 91FF7258B7FF5942A1-    <1>| ...
  1280 | 000010E1 | FF5D47A6FF735BBCFF-    <1>| ...
  1281 | 000010EA | 775DA8FF               <1>| ...
  1282 | 000010EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280229406, 4280819748, 4283771963, 42870521
  1283 | 000010F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1284 | 00001100 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1285 | 00001109 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1286 | 00001112 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1287 | 0000111B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1288 | 00001124 | 1EFF1E1E1FFF242028-    <1>| ...
  1289 | 0000112D | FF3B2C55FF4E3987FF-    <1>| ...
  1290 | 00001136 | 503A8EFF6D54ABFF7A-    <1>| ...
  1291 | 0000113F | 5EBAFF6B4CA9FF7F60-    <1>| ...
  1292 | 00001148 | B9FF794B71FF823E32-    <1>| ...
  1293 | 00001151 | FF854131FF95635BFF-    <1>| ...
  1294 | 0000115A | 97655DFF9E6C66FFA9-    <1>| ...
  1295 | 00001163 | 7E7CFFA0716BFFB58E-    <1>| ...
  1296 | 0000116C | 8AFF9F6A61FF9F685F-    <1>| ...
  1297 | 00001175 | FFB4857DFF9C675BFF-    <1>| ...
  1298 | 0000117E | A8786FFFA37067FFA4-    <1>| ...
  1299 | 00001187 | 6E65FF9B665BFF985A-    <1>| ...
  1300 | 00001190 | 4BFF874A41FF855C62-    <1>| ...
  1301 | 00001199 | FF8F5F5CFFA26A5BFF-    <1>| ...
  1302 | 000011A2 | 93503EFF91503DFF1A-    <1>| ...
  1303 | 000011AB | 100DFF180D09FF180D-    <1>| ...
  1304 | 000011B4 | 0AFF190E0CFF170B08-    <1>| ...
  1305 | 000011BD | FF160B08FF82402FFF-    <1>| ...
  1306 | 000011C6 | 803E2EFF72383BFF7D-    <1>| ...
  1307 | 000011CF | 5391FF815DB9FF7D5D-    <1>| ...
  1308 | 000011D8 | BEFF694BB7FF7357BF-    <1>| ...
  1309 | 000011E1 | FF9176DAFF7659C0FF-    <1>| ...
  1310 | 000011EA | 8364AFFF               <1>| ...
  1311 | 000011EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280229407, 4281082662, 4285413447, 42886280
  1312 | 000011F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1313 | 00001200 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1314 | 00001209 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1315 | 00001212 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1316 | 0000121B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1317 | 00001224 | 1EFF1F1E1FFF26232C-    <1>| ...
  1318 | 0000122D | FF47386EFF5D459FFF-    <1>| ...
  1319 | 00001236 | 7257B6FF6F53B4FF72-    <1>| ...
  1320 | 0000123F | 55B7FF7E5FC0FF8D6C-    <1>| ...
  1321 | 00001248 | C3FF8D4D5EFF884132-    <1>| ...
  1322 | 00001251 | FF884131FF996258FF-    <1>| ...
  1323 | 0000125A | 98645EFF8C544CFF99-    <1>| ...
  1324 | 00001263 | 645EFF965E54FFAC84-    <1>| ...
  1325 | 0000126C | 7FFF8C4E41FF956056-    <1>| ...
  1326 | 00001275 | FFAF8278FFA6756AFF-    <1>| ...
  1327 | 0000127E | 925040FF180C09FF17-    <1>| ...
  1328 | 00001287 | 0C09FF1D1514FF1D18-    <1>| ...
  1329 | 00001290 | 18FF1C1718FF1E1819-    <1>| ...
  1330 | 00001299 | FFA06556FF9E685BFF-    <1>| ...
  1331 | 000012A2 | B2847CFF64DC64FF64-    <1>| ...
  1332 | 000012AB | DC64FF64DC64FF64DC-    <1>| ...
  1333 | 000012B4 | 64FF64DC64FF64DC64-    <1>| ...
  1334 | 000012BD | FF170B08FF160B08FF-    <1>| ...
  1335 | 000012C6 | 813E30FF7E4660FF68-    <1>| ...
  1336 | 000012CF | 385AFF80529DFF825F-    <1>| ...
  1337 | 000012D8 | C1FF7958C7FF795AC7-    <1>| ...
  1338 | 000012E1 | FF8668D0FF876AC4FF-    <1>| ...
  1339 | 000012EA | 825682FF               <1>| ...
  1340 | 000012EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4278519045, 4278519045, 4278519045, 4278519045, 4278519045, 4278519045, 4280229407, 4281213991, 4286070608, 42900086
  1341 | 000012F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1342 | 00001300 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1343 | 00001309 | FF1E1E1EFF050505FF-    <1>| ...
  1344 | 00001312 | 050505FF050505FF05-    <1>| ...
  1345 | 0000131B | 0505FF050505FF0505-    <1>| ...
  1346 | 00001324 | 05FF1F1E1FFF27242E-    <1>| ...
  1347 | 0000132D | FF503F78FF6F56B4FF-    <1>| ...
  1348 | 00001336 | 7B60C2FF7F62C6FF7E-    <1>| ...
  1349 | 0000133F | 61C6FF8465C4FF8155-    <1>| ...
  1350 | 00001348 | 88FF874037FF884130-    <1>| ...
  1351 | 00001351 | FF874130FF864335FF-    <1>| ...
  1352 | 0000135A | 99635BFF966159FF9F-    <1>| ...
  1353 | 00001363 | 685FFF8D4D40FFA16E-    <1>| ...
  1354 | 0000136C | 62FFAC7C75FFB1847E-    <1>| ...
  1355 | 00001375 | FFA8746AFFB07E74FF-    <1>| ...
  1356 | 0000137E | 64DC64FF64DC64FF64-    <1>| ...
  1357 | 00001387 | DC64FF64DC64FF64DC-    <1>| ...
  1358 | 00001390 | 64FF64DC64FF1D1718-    <1>| ...
  1359 | 00001399 | FF190E0CFFAC766BFF-    <1>| ...
  1360 | 000013A2 | 64DC64FF64DC64FF64-    <1>| ...
  1361 | 000013AB | DC64FFBA857AFFA461-    <1>| ...
  1362 | 000013B4 | 4FFF64DC64FF64DC64-    <1>| ...
  1363 | 000013BD | FF64DC64FF170C09FF-    <1>| ...
  1364 | 000013C6 | 8A4534FF864544FF16-    <1>| ...
  1365 | 000013CF | 0C0EFF140A0EFF8B62-    <1>| ...
  1366 | 000013D8 | BCFF8D6AD3FF9071D6-    <1>| ...
  1367 | 000013E1 | FF9779D7FF946BB3FF-    <1>| ...
  1368 | 000013EA | 744556FF               <1>| ...
  1369 | 000013EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4284800100, 4284800100, 4284800100, 4284800100, 4284800100, 4284800100, 4278519045, 4278519045, 4281148457, 4285677398, 42802252
  1370 | 000013F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1371 | 00001400 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1372 | 00001409 | FF64DC64FF64DC64FF-    <1>| ...
  1373 | 00001412 | 64DC64FF64DC64FF64-    <1>| ...
  1374 | 0000141B | DC64FF64DC64FF0505-    <1>| ...
  1375 | 00001424 | 05FF050505FF29242D-    <1>| ...
  1376 | 0000142D | FF563F72FF130E1FFF-    <1>| ...
  1377 | 00001436 | 151021FF8364CCFF80-    <1>| ...
  1378 | 0000143F | 61C7FF7053A1FF0E06-    <1>| ...
  1379 | 00001448 | 08FF160A08FF88412F-    <1>| ...
  1380 | 00001451 | FF88412FFF884537FF-    <1>| ...
  1381 | 0000145A | A1706CFFA8766EFF88-    <1>| ...
  1382 | 00001463 | 4A3BFF97594BFF9C5E-    <1>| ...
  1383 | 0000146C | 50FF915348FF96594E-    <1>| ...
  1384 | 00001475 | FF915143FF64DC64FF-    <1>| ...
  1385 | 0000147E | 64DC64FF64DC64FF74-    <1>| ...
  1386 | 00001487 | 586FFF635A80FF64DC-    <1>| ...
  1387 | 00001490 | 64FF64DC64FF64DC64-    <1>| ...
  1388 | 00001499 | FF1A110EFFAA7268FF-    <1>| ...
  1389 | 000014A2 | 64DC64FF64DC64FF1C-    <1>| ...
  1390 | 000014AB | 1311FFA66859FF9E57-    <1>| ...
  1391 | 000014B4 | 42FFAA6A5BFF64DC64-    <1>| ...
  1392 | 000014BD | FF64DC64FF190D0AFF-    <1>| ...
  1393 | 000014C6 | 9A503CFF64DC64FF64-    <1>| ...
  1394 | 000014CF | DC64FF150A0CFF9268-    <1>| ...
  1395 | 000014D8 | C7FF9874D2FF926AB0-    <1>| ...
  1396 | 000014E1 | FF7C4D6EFF7A3937FF-    <1>| ...
  1397 | 000014EA | 743D32FF               <1>| ...
  1398 | 000014EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4284800100, 4284800100, 4284800100, 4280163870, 4280163870, 4284800100, 4284800100, 4284800100, 4278519045, 4280558121, 4284800100, 42848001
  1399 | 000014F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1400 | 00001500 | 1EFF1E1E1EFF64DC64-    <1>| ...
  1401 | 00001509 | FF64DC64FF64DC64FF-    <1>| ...
  1402 | 00001512 | 1E1E1EFF1E1E1EFF64-    <1>| ...
  1403 | 0000151B | DC64FF64DC64FF64DC-    <1>| ...
  1404 | 00001524 | 64FF050505FF292224-    <1>| ...
  1405 | 0000152D | FF64DC64FF64DC64FF-    <1>| ...
  1406 | 00001536 | 140D19FF7E5EC2FF89-    <1>| ...
  1407 | 0000153F | 6ACFFF64DC64FF64DC-    <1>| ...
  1408 | 00001548 | 64FF150A07FF89412F-    <1>| ...
  1409 | 00001551 | FF8A4230FF8A4636FF-    <1>| ...
  1410 | 0000155A | 1C1312FF1B1211FF1A-    <1>| ...
  1411 | 00001563 | 1211FF1A1210FF1D15-    <1>| ...
  1412 | 0000156C | 14FF180F0DFF1D1514-    <1>| ...
  1413 | 00001575 | FFA1726EFF64DC64FF-    <1>| ...
  1414 | 0000157E | 64DC64FF1C1513FFB9-    <1>| ...
  1415 | 00001587 | 9EA6FF90778AFF8655-    <1>| ...
  1416 | 00001590 | 56FF64DC64FF64DC64-    <1>| ...
  1417 | 00001599 | FF1C1311FFAA746AFF-    <1>| ...
  1418 | 000015A2 | 64DC64FF64DC64FF1F-    <1>| ...
  1419 | 000015AB | 1715FFAF7A6EFFB280-    <1>| ...
  1420 | 000015B4 | 76FFA86856FF64DC64-    <1>| ...
  1421 | 000015BD | FF64DC64FF1B0E0AFF-    <1>| ...
  1422 | 000015C6 | A15640FF64DC64FF64-    <1>| ...
  1423 | 000015CF | DC64FF7A3F64FF8C62-    <1>| ...
  1424 | 000015D8 | BBFF8C5372FF8A4B46-    <1>| ...
  1425 | 000015E1 | FF6A2D23FF884031FF-    <1>| ...
  1426 | 000015EA | 7E3E31FF               <1>| ...
  1427 | 000015EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4284800100, 4284800100, 4278519045, 4280295721, 4284800100, 42848001
  1428 | 000015F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1429 | 00001600 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1430 | 00001609 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1431 | 00001612 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1432 | 0000161B | 1E1EFF64DC64FF64DC-    <1>| ...
  1433 | 00001624 | 64FF050505FF292120-    <1>| ...
  1434 | 0000162D | FF64DC64FF64DC64FF-    <1>| ...
  1435 | 00001636 | 140A09FF84568FFF86-    <1>| ...
  1436 | 0000163F | 65C5FF64DC64FF64DC-    <1>| ...
  1437 | 00001648 | 64FF130907FF89412F-    <1>| ...
  1438 | 00001651 | FF8A422FFF64DC64FF-    <1>| ...
  1439 | 0000165A | 64DC64FF64DC64FF64-    <1>| ...
  1440 | 00001663 | DC64FF64DC64FF64DC-    <1>| ...
  1441 | 0000166C | 64FF64DC64FF1A0F0D-    <1>| ...
  1442 | 00001675 | FF9D6459FF64DC64FF-    <1>| ...
  1443 | 0000167E | 64DC64FF1E1817FF1E-    <1>| ...
  1444 | 00001687 | 1717FFA9736BFFA066-    <1>| ...
  1445 | 00001690 | 5AFF64DC64FF64DC64-    <1>| ...
  1446 | 00001699 | FF1D1412FFAA6D60FF-    <1>| ...
  1447 | 000016A2 | 64DC64FF64DC64FF1E-    <1>| ...
  1448 | 000016AB | 1412FF1D1412FF1E15-    <1>| ...
  1449 | 000016B4 | 14FF64DC64FF64DC64-    <1>| ...
  1450 | 000016BD | FF64DC64FFA1553FFF-    <1>| ...
  1451 | 000016C6 | 974C39FF8A4233FF87-    <1>| ...
  1452 | 000016CF | 4348FF8354AEFF9868-    <1>| ...
  1453 | 000016D8 | B1FF834133FF9D5544-    <1>| ...
  1454 | 000016E1 | FF78372AFF843D2BFF-    <1>| ...
  1455 | 000016EA | 864534FF               <1>| ...
  1456 | 000016EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4284800100, 4284800100, 4278519045, 4280230185, 4284800100, 42848001
  1457 | 000016F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1458 | 00001700 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1459 | 00001709 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1460 | 00001712 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1461 | 0000171B | 1E1EFF64DC64FF64DC-    <1>| ...
  1462 | 00001724 | 64FF050505FF29211F-    <1>| ...
  1463 | 0000172D | FF64DC64FF64DC64FF-    <1>| ...
  1464 | 00001736 | 140A07FF7C3C2FFF7E-    <1>| ...
  1465 | 0000173F | 4E90FF64DC64FF64DC-    <1>| ...
  1466 | 00001748 | 64FF0F0605FF86402E-    <1>| ...
  1467 | 00001751 | FF64DC64FF64DC64FF-    <1>| ...
  1468 | 0000175A | 170B08FF8E452FFF8E-    <1>| ...
  1469 | 00001763 | 442FFF8F4631FF64DC-    <1>| ...
  1470 | 0000176C | 64FF64DC64FF180D0B-    <1>| ...
  1471 | 00001775 | FFA97165FF64DC64FF-    <1>| ...
  1472 | 0000177E | 64DC64FF64DC64FF1E-    <1>| ...
  1473 | 00001787 | 1715FF1A100EFF64DC-    <1>| ...
  1474 | 00001790 | 64FF64DC64FF64DC64-    <1>| ...
  1475 | 00001799 | FF9F523BFF9E513AFF-    <1>| ...
  1476 | 000017A2 | 64DC64FF64DC64FF64-    <1>| ...
  1477 | 000017AB | DC64FF64DC64FF64DC-    <1>| ...
  1478 | 000017B4 | 64FF64DC64FF64DC64-    <1>| ...
  1479 | 000017BD | FFA4553EFF994D3AFF-    <1>| ...
  1480 | 000017C6 | 8C4431FF8A4334FF17-    <1>| ...
  1481 | 000017CF | 0C11FF191223FF8D57-    <1>| ...
  1482 | 000017D8 | 81FF985240FF9B4F3E-    <1>| ...
  1483 | 000017E1 | FF803929FF8C4433FF-    <1>| ...
  1484 | 000017EA | 7A3B2CFF               <1>| ...
  1485 | 000017EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4278519045, 4278519045, 4278519045, 4284800100, 4284800100, 4284800100, 4280163871, 4280230185, 4284800100, 42848001
  1486 | 000017F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1487 | 00001800 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1488 | 00001809 | FF1E1E1EFF050505FF-    <1>| ...
  1489 | 00001812 | 050505FF050505FF64-    <1>| ...
  1490 | 0000181B | DC64FF64DC64FF64DC-    <1>| ...
  1491 | 00001824 | 64FF1F1E1EFF29211F-    <1>| ...
  1492 | 0000182D | FF64DC64FF64DC64FF-    <1>| ...
  1493 | 00001836 | 150A07FF7E3B2CFF7B-    <1>| ...
  1494 | 0000183F | 4770FF64DC64FF64DC-    <1>| ...
  1495 | 00001848 | 64FF0C0504FF86402E-    <1>| ...
  1496 | 00001851 | FF64DC64FF64DC64FF-    <1>| ...
  1497 | 0000185A | 170B08FF170B08FF18-    <1>| ...
  1498 | 00001863 | 0C08FF180C08FF64DC-    <1>| ...
  1499 | 0000186C | 64FF64DC64FF1E1615-    <1>| ...
  1500 | 00001875 | FFA26961FFA6726BFF-    <1>| ...
  1501 | 0000187E | 64DC64FF64DC64FF64-    <1>| ...
  1502 | 00001887 | DC64FF64DC64FF64DC-    <1>| ...
  1503 | 00001890 | 64FF64DC64FF1A0D09-    <1>| ...
  1504 | 00001899 | FF1A0E09FFA15439FF-    <1>| ...
  1505 | 000018A2 | 64DC64FF64DC64FF1B-    <1>| ...
  1506 | 000018AB | 0E0AFFA4563DFFA356-    <1>| ...
  1507 | 000018B4 | 3DFFA4553CFFA5553B-    <1>| ...
  1508 | 000018BD | FF9E5139FF934734FF-    <1>| ...
  1509 | 000018C6 | 8F4433FF64DC64FF64-    <1>| ...
  1510 | 000018CF | DC64FF1B1424FF874B-    <1>| ...
  1511 | 000018D8 | 55FF924A38FF974D3B-    <1>| ...
  1512 | 000018E1 | FF914734FF9C4F3CFF-    <1>| ...
  1513 | 000018EA | 723628FF               <1>| ...
  1514 | 000018EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4284800100, 4284800100, 4284800100, 4284800100, 4284800100, 4284800100, 4280163870, 4280163871, 4280230185, 4284800100, 42848001
  1515 | 000018F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1516 | 00001900 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1517 | 00001909 | FF64DC64FF64DC64FF-    <1>| ...
  1518 | 00001912 | 64DC64FF64DC64FF64-    <1>| ...
  1519 | 0000191B | DC64FF64DC64FF1E1E-    <1>| ...
  1520 | 00001924 | 1EFF1F1E1EFF29211F-    <1>| ...
  1521 | 0000192D | FF64DC64FF64DC64FF-    <1>| ...
  1522 | 00001936 | 140A07FF7D3B2BFF7C-    <1>| ...
  1523 | 0000193F | 445DFF64DC64FF64DC-    <1>| ...
  1524 | 00001948 | 64FF0A0404FF823F2D-    <1>| ...
  1525 | 00001951 | FF89432FFF64DC64FF-    <1>| ...
  1526 | 0000195A | 64DC64FF64DC64FF64-    <1>| ...
  1527 | 00001963 | DC64FF64DC64FF64DC-    <1>| ...
  1528 | 0000196C | 64FF64DC64FF180C09-    <1>| ...
  1529 | 00001975 | FFB98479FF64DC64FF-    <1>| ...
  1530 | 0000197E | 64DC64FF64DC64FFA5-    <1>| ...
  1531 | 00001987 | 5F50FF9B4E38FF64DC-    <1>| ...
  1532 | 00001990 | 64FF64DC64FF64DC64-    <1>| ...
  1533 | 00001999 | FF1B0E0AFFA2553AFF-    <1>| ...
  1534 | 000019A2 | 64DC64FF64DC64FF1B-    <1>| ...
  1535 | 000019AB | 0E0AFFA4563DFFA356-    <1>| ...
  1536 | 000019B4 | 3CFFA3543CFF9F503A-    <1>| ...
  1537 | 000019BD | FF964B36FF934734FF-    <1>| ...
  1538 | 000019C6 | 944734FF64DC64FF64-    <1>| ...
  1539 | 000019CF | DC64FF1A1321FF7B3F-    <1>| ...
  1540 | 000019D8 | 3CFF89402FFF974B39-    <1>| ...
  1541 | 000019E1 | FF994E3AFFA0523BFF-    <1>| ...
  1542 | 000019EA | 7F4130FF               <1>| ...
  1543 | 000019EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4284800100, 4284800100, 4284800100, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163871, 4280230185, 4284800100, 42848001
  1544 | 000019F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1545 | 00001A00 | 1EFF1E1E1EFF64DC64-    <1>| ...
  1546 | 00001A09 | FF64DC64FF64DC64FF-    <1>| ...
  1547 | 00001A12 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1548 | 00001A1B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1549 | 00001A24 | 1EFF1F1E1EFF29211F-    <1>| ...
  1550 | 00001A2D | FF64DC64FF64DC64FF-    <1>| ...
  1551 | 00001A36 | 140907FF140A07FF14-    <1>| ...
  1552 | 00001A3F | 0A0AFF64DC64FF64DC-    <1>| ...
  1553 | 00001A48 | 64FF2B1013FF773729-    <1>| ...
  1554 | 00001A51 | FF89422EFF170B08FF-    <1>| ...
  1555 | 00001A5A | 170B08FF8D452EFF90-    <1>| ...
  1556 | 00001A63 | 452EFF904630FF64DC-    <1>| ...
  1557 | 00001A6C | 64FF64DC64FF180C09-    <1>| ...
  1558 | 00001A75 | FF934C3AFF64DC64FF-    <1>| ...
  1559 | 00001A7E | 64DC64FF1F1816FF9D-    <1>| ...
  1560 | 00001A87 | 523EFF9E5037FFA052-    <1>| ...
  1561 | 00001A90 | 38FF64DC64FF64DC64-    <1>| ...
  1562 | 00001A99 | FF1B0E0AFFA3553AFF-    <1>| ...
  1563 | 00001AA2 | 64DC64FF64DC64FF1B-    <1>| ...
  1564 | 00001AAB | 0E0AFF1B0E0AFFA154-    <1>| ...
  1565 | 00001AB4 | 3BFF9E5039FF190C09-    <1>| ...
  1566 | 00001ABD | FF180C09FF180C09FF-    <1>| ...
  1567 | 00001AC6 | 9B4D37FF64DC64FF64-    <1>| ...
  1568 | 00001ACF | DC64FF181019FF682F-    <1>| ...
  1569 | 00001AD8 | 25FF904634FF924935-    <1>| ...
  1570 | 00001AE1 | FF9F543DFF9D4F36FF-    <1>| ...
  1571 | 00001AEA | 8F4E3AFF               <1>| ...
  1572 | 00001AEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4284800100, 4284800100, 4278519045, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163871, 4280230185, 4284800100, 42848001
  1573 | 00001AF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1574 | 00001B00 | 1EFF1E1E1EFF64DC64-    <1>| ...
  1575 | 00001B09 | FF64DC64FF050505FF-    <1>| ...
  1576 | 00001B12 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1577 | 00001B1B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1578 | 00001B24 | 1EFF1F1E1EFF29211F-    <1>| ...
  1579 | 00001B2D | FF64DC64FF64DC64FF-    <1>| ...
  1580 | 00001B36 | 64DC64FF64DC64FF64-    <1>| ...
  1581 | 00001B3F | DC64FF64DC64FF7553-    <1>| ...
  1582 | 00001B48 | 9DFF280F13FF602A22-    <1>| ...
  1583 | 00001B51 | FF64DC64FF64DC64FF-    <1>| ...
  1584 | 00001B5A | 170B08FF180B08FF18-    <1>| ...
  1585 | 00001B63 | 0B08FF180C08FF64DC-    <1>| ...
  1586 | 00001B6C | 64FF64DC64FF954834-    <1>| ...
  1587 | 00001B75 | FF954934FF64DC64FF-    <1>| ...
  1588 | 00001B7E | 64DC64FF1A0F0CFF1A-    <1>| ...
  1589 | 00001B87 | 0D09FF9C5036FF9F52-    <1>| ...
  1590 | 00001B90 | 38FF64DC64FF64DC64-    <1>| ...
  1591 | 00001B99 | FF1B0E0AFFA2553BFF-    <1>| ...
  1592 | 00001BA2 | 64DC64FF64DC64FF64-    <1>| ...
  1593 | 00001BAB | DC64FF1B0E0AFF1A0D-    <1>| ...
  1594 | 00001BB4 | 0AFF64DC64FF64DC64-    <1>| ...
  1595 | 00001BBD | FF64DC64FF994D38FF-    <1>| ...
  1596 | 00001BC6 | A75641FF64DC64FF64-    <1>| ...
  1597 | 00001BCF | DC64FF160D13FF7633-    <1>| ...
  1598 | 00001BD8 | 28FF994C37FF914934-    <1>| ...
  1599 | 00001BE1 | FFA3563EFF9E4E37FF-    <1>| ...
  1600 | 00001BEA | 95523BFF               <1>| ...
  1601 | 00001BEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4284800100, 4284800100, 4278519045, 4278519045, 4280163870, 4280163870, 4278519045, 4278519045, 4278519045, 4280230185, 4280561495, 42807604
  1602 | 00001BF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1603 | 00001C00 | 1EFF1E1E1EFF64DC64-    <1>| ...
  1604 | 00001C09 | FF64DC64FF050505FF-    <1>| ...
  1605 | 00001C12 | 050505FF1E1E1EFF1E-    <1>| ...
  1606 | 00001C1B | 1E1EFF050505FF0505-    <1>| ...
  1607 | 00001C24 | 05FF050505FF29211F-    <1>| ...
  1608 | 00001C2D | FF572F24FF743827FF-    <1>| ...
  1609 | 00001C36 | 783827FF7C3A29FF7D-    <1>| ...
  1610 | 00001C3F | 3B30FF7C4F9AFF8B62-    <1>| ...
  1611 | 00001C48 | B8FF3A1A20FF451C17-    <1>| ...
  1612 | 00001C51 | FF813D2DFF64DC64FF-    <1>| ...
  1613 | 00001C5A | 64DC64FF64DC64FF64-    <1>| ...
  1614 | 00001C63 | DC64FF64DC64FF64DC-    <1>| ...
  1615 | 00001C6C | 64FF934733FF964934-    <1>| ...
  1616 | 00001C75 | FF954A33FF64DC64FF-    <1>| ...
  1617 | 00001C7E | 64DC64FF64DC64FF1A-    <1>| ...
  1618 | 00001C87 | 0D09FF1A0D09FF64DC-    <1>| ...
  1619 | 00001C90 | 64FF64DC64FF64DC64-    <1>| ...
  1620 | 00001C99 | FFA1553BFFA2533BFF-    <1>| ...
  1621 | 00001CA2 | A2533BFF64DC64FF64-    <1>| ...
  1622 | 00001CAB | DC64FF64DC64FF64DC-    <1>| ...
  1623 | 00001CB4 | 64FF64DC64FF64DC64-    <1>| ...
  1624 | 00001CBD | FF9D5037FFA75841FF-    <1>| ...
  1625 | 00001CC6 | A45540FF64DC64FF64-    <1>| ...
  1626 | 00001CCF | DC64FF160C0DFF8D41-    <1>| ...
  1627 | 00001CD8 | 30FF9E4D3AFF984E37-    <1>| ...
  1628 | 00001CE1 | FFA5583CFFA2543AFF-    <1>| ...
  1629 | 00001CEA | 944E37FF               <1>| ...
  1630 | 00001CEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4284800100, 4284800100, 4284800100, 4278519045, 4278519045, 4284800100, 4284800100, 4284800100, 4280163871, 4280230185, 4280495959, 42806946
  1631 | 00001CF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1632 | 00001D00 | 1EFF1E1E1EFF64DC64-    <1>| ...
  1633 | 00001D09 | FF64DC64FF64DC64FF-    <1>| ...
  1634 | 00001D12 | 050505FF050505FF64-    <1>| ...
  1635 | 00001D1B | DC64FF64DC64FF64DC-    <1>| ...
  1636 | 00001D24 | 64FF1F1E1EFF29211F-    <1>| ...
  1637 | 00001D2D | FF572F23FF753726FF-    <1>| ...
  1638 | 00001D36 | 773827FF793928FF7C-    <1>| ...
  1639 | 00001D3F | 3A2AFF7C4878FF8B61-    <1>| ...
  1640 | 00001D48 | C4FF5E323FFF30130E-    <1>| ...
  1641 | 00001D51 | FF663024FF8D422FFF-    <1>| ...
  1642 | 00001D5A | 8D442FFF8E4530FF90-    <1>| ...
  1643 | 00001D63 | 4530FF8F4631FF9247-    <1>| ...
  1644 | 00001D6C | 32FF934831FF954932-    <1>| ...
  1645 | 00001D75 | FF974B34FF994C36FF-    <1>| ...
  1646 | 00001D7E | 64DC64FF64DC64FF64-    <1>| ...
  1647 | 00001D87 | DC64FF64DC64FF64DC-    <1>| ...
  1648 | 00001D90 | 64FF64DC64FFA0533A-    <1>| ...
  1649 | 00001D99 | FFA0533BFFA0543BFF-    <1>| ...
  1650 | 00001DA2 | 9F523AFF9D5039FF99-    <1>| ...
  1651 | 00001DAB | 4D36FF994B36FF9649-    <1>| ...
  1652 | 00001DB4 | 34FF984A36FFA1513C-    <1>| ...
  1653 | 00001DBD | FFA95941FFA95940FF-    <1>| ...
  1654 | 00001DC6 | 9D5147FF64DC64FF64-    <1>| ...
  1655 | 00001DCF | DC64FF170C0AFF9346-    <1>| ...
  1656 | 00001DD8 | 32FF9F4F38FF9F533C-    <1>| ...
  1657 | 00001DE1 | FFA6593EFFA65B40FF-    <1>| ...
  1658 | 00001DEA | 924D37FF               <1>| ...
  1659 | 00001DEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4284800100, 4284800100, 4284800100, 4284800100, 4284800100, 4284800100, 4280163870, 4280163871, 4280230184, 4280495701, 42806943
  1660 | 00001DF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1661 | 00001E00 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1662 | 00001E09 | FF64DC64FF64DC64FF-    <1>| ...
  1663 | 00001E12 | 64DC64FF64DC64FF64-    <1>| ...
  1664 | 00001E1B | DC64FF64DC64FF1E1E-    <1>| ...
  1665 | 00001E24 | 1EFF1F1E1EFF28211F-    <1>| ...
  1666 | 00001E2D | FF552E23FF733626FF-    <1>| ...
  1667 | 00001E36 | 763827FF773827FF7A-    <1>| ...
  1668 | 00001E3F | 3A29FF794058FF8B63-    <1>| ...
  1669 | 00001E48 | C7FF7B4660FF441D17-    <1>| ...
  1670 | 00001E51 | FF471E18FF833E2DFF-    <1>| ...
  1671 | 00001E5A | 8C442FFF90442FFF91-    <1>| ...
  1672 | 00001E63 | 4530FF914731FF9348-    <1>| ...
  1673 | 00001E6C | 32FF934832FF954934-    <1>| ...
  1674 | 00001E75 | FF984D36FF994D36FF-    <1>| ...
  1675 | 00001E7E | 9A4E37FF9B4E37FF9B-    <1>| ...
  1676 | 00001E87 | 4F36FF9D5038FF9E50-    <1>| ...
  1677 | 00001E90 | 38FF9F5138FF9F5239-    <1>| ...
  1678 | 00001E99 | FF9F5239FF9E523BFF-    <1>| ...
  1679 | 00001EA2 | 9C5038FF984D38FF97-    <1>| ...
  1680 | 00001EAB | 4B35FF984A36FF994B-    <1>| ...
  1681 | 00001EB4 | 37FFA05139FFA85840-    <1>| ...
  1682 | 00001EBD | FFAA5B44FFAA5943FF-    <1>| ...
  1683 | 00001EC6 | 9C5B78FF64DC64FF64-    <1>| ...
  1684 | 00001ECF | DC64FF924A39FF9447-    <1>| ...
  1685 | 00001ED8 | 32FF9E4F36FFA4563D-    <1>| ...
  1686 | 00001EE1 | FFA85A40FFA95C41FF-    <1>| ...
  1687 | 00001EEA | 944E37FF               <1>| ...
  1688 | 00001EEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163871, 4280230184, 4280495444, 42806285
  1689 | 00001EF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1690 | 00001F00 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1691 | 00001F09 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1692 | 00001F12 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1693 | 00001F1B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1694 | 00001F24 | 1EFF1F1E1EFF28211F-    <1>| ...
  1695 | 00001F2D | FF542D23FF703525FF-    <1>| ...
  1696 | 00001F36 | 733625FF743727FF78-    <1>| ...
  1697 | 00001F3F | 3829FF773A3EFF8763-    <1>| ...
  1698 | 00001F48 | C1FF83507CFF663029-    <1>| ...
  1699 | 00001F51 | FF3F1815FF6D3225FF-    <1>| ...
  1700 | 00001F5A | 8B422FFF8F452FFF90-    <1>| ...
  1701 | 00001F63 | 4631FF914632FF9348-    <1>| ...
  1702 | 00001F6C | 33FF944935FF954934-    <1>| ...
  1703 | 00001F75 | FF984D36FF994D36FF-    <1>| ...
  1704 | 00001F7E | 9A4D37FF9A4D37FF9B-    <1>| ...
  1705 | 00001F87 | 4E38FF9B4E37FF9D50-    <1>| ...
  1706 | 00001F90 | 37FF9F5139FF9E5139-    <1>| ...
  1707 | 00001F99 | FF9E5138FF9C5039FF-    <1>| ...
  1708 | 00001FA2 | 974C38FF924936FF93-    <1>| ...
  1709 | 00001FAB | 4834FF994B37FFA253-    <1>| ...
  1710 | 00001FB4 | 3CFFA5553DFFA65740-    <1>| ...
  1711 | 00001FBD | FFAC5D44FFA85A49FF-    <1>| ...
  1712 | 00001FC6 | 9E6BB5FF916DBFFF50-    <1>| ...
  1713 | 00001FCF | 2028FF9A513DFF9648-    <1>| ...
  1714 | 00001FD8 | 33FF9E4F36FFA4563D-    <1>| ...
  1715 | 00001FE1 | FFA85940FFA85C40FF-    <1>| ...
  1716 | 00001FEA | 99533BFF               <1>| ...
  1717 | 00001FEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163871, 4280229927, 4280429393, 42805627
  1718 | 00001FF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1719 | 00002000 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1720 | 00002009 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1721 | 00002012 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1722 | 0000201B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1723 | 00002024 | 1EFF1F1E1EFF27201F-    <1>| ...
  1724 | 0000202D | FF512B22FF6D3424FF-    <1>| ...
  1725 | 00002036 | 703524FF723525FF75-    <1>| ...
  1726 | 0000203F | 3727FF78392CFF845A-    <1>| ...
  1727 | 00002048 | ACFF8A5A9EFF743831-    <1>| ...
  1728 | 00002051 | FF461E19FF55261EFF-    <1>| ...
  1729 | 0000205A | 87412FFF8F4531FF90-    <1>| ...
  1730 | 00002063 | 4632FF924732FF9348-    <1>| ...
  1731 | 0000206C | 34FF934835FF934833-    <1>| ...
  1732 | 00002075 | FF944934FF934833FF-    <1>| ...
  1733 | 0000207E | 944A36FF984B37FF9A-    <1>| ...
  1734 | 00002087 | 4D38FF9B4E38FF9D50-    <1>| ...
  1735 | 00002090 | 38FF9E5138FF9E5138-    <1>| ...
  1736 | 00002099 | FF9E5138FF9B5038FF-    <1>| ...
  1737 | 000020A2 | 984C37FF944834FF96-    <1>| ...
  1738 | 000020AB | 4935FF9F513BFFA659-    <1>| ...
  1739 | 000020B4 | 40FFA4563FFFA3543C-    <1>| ...
  1740 | 000020BD | FFAD5E43FFA15B5CFF-    <1>| ...
  1741 | 000020C6 | 9C73D7FF785899FF57-    <1>| ...
  1742 | 000020CF | 2524FFA25642FF994C-    <1>| ...
  1743 | 000020D8 | 35FF9E5037FFA4573F-    <1>| ...
  1744 | 000020E1 | FFA6573EFFA85A40FF-    <1>| ...
  1745 | 000020EA | 97553EFF               <1>| ...
  1746 | 000020EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163871, 4280229926, 4280429131, 42805617
  1747 | 000020F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1748 | 00002100 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1749 | 00002109 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1750 | 00002112 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1751 | 0000211B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1752 | 00002124 | 1EFF1F1E1EFF26201F-    <1>| ...
  1753 | 0000212D | FF4B2A22FF643024FF-    <1>| ...
  1754 | 00002136 | 6D3324FF6F3425FF71-    <1>| ...
  1755 | 0000213F | 3526FF75392AFF8052-    <1>| ...
  1756 | 00002148 | 89FF865BB3FF783D3E-    <1>| ...
  1757 | 00002151 | FF4B211DFF371712FF-    <1>| ...
  1758 | 0000215A | 763828FF8F4432FF91-    <1>| ...
  1759 | 00002163 | 4632FF8F4733FF8F45-    <1>| ...
  1760 | 0000216C | 35FF8F4633FF8F4533-    <1>| ...
  1761 | 00002175 | FF904733FF904633FF-    <1>| ...
  1762 | 0000217E | 934736FF914735FF90-    <1>| ...
  1763 | 00002187 | 4633FF924836FF994D-    <1>| ...
  1764 | 00002190 | 39FF9D4E3BFF9F503A-    <1>| ...
  1765 | 00002199 | FF9E4F3AFF9A4D37FF-    <1>| ...
  1766 | 000021A2 | 964A34FF954A35FF9A-    <1>| ...
  1767 | 000021AB | 4E38FFA5573EFFA85B-    <1>| ...
  1768 | 000021B4 | 41FFA75840FF9D4E39-    <1>| ...
  1769 | 000021BD | FFA85A45FFA0628AFF-    <1>| ...
  1770 | 000021C6 | 926BD9FF593A5EFF53-    <1>| ...
  1771 | 000021CF | 221CFF9A4F3BFF9C51-    <1>| ...
  1772 | 000021D8 | 3BFF9B4E38FFA45840-    <1>| ...
  1773 | 000021E1 | FFA2563DFFA45A41FF-    <1>| ...
  1774 | 000021EA | 955540FF               <1>| ...
  1775 | 000021EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280229923, 4280362558, 42804296
  1776 | 000021F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1777 | 00002200 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1778 | 00002209 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1779 | 00002212 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1780 | 0000221B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1781 | 00002224 | 1EFF1E1E1EFF23201F-    <1>| ...
  1782 | 0000222D | FF3E2621FF552C22FF-    <1>| ...
  1783 | 00002236 | 5F2F23FF673224FF6F-    <1>| ...
  1784 | 0000223F | 3526FF723629FF7A46-    <1>| ...
  1785 | 00002248 | 63FF8E67C6FF78404B-    <1>| ...
  1786 | 00002251 | FF532620FF290F0DFF-    <1>| ...
  1787 | 0000225A | 612B22FF863F2FFF89-    <1>| ...
  1788 | 00002263 | 4131FF844134FF8547-    <1>| ...
  1789 | 0000226C | 42FF89514FFF8B5455-    <1>| ...
  1790 | 00002275 | FF945C5EFF935758FF-    <1>| ...
  1791 | 0000227E | 904F4DFF914E44FF96-    <1>| ...
  1792 | 00002287 | 4C3CFF994D3CFF984E-    <1>| ...
  1793 | 00002290 | 3BFF974D38FF934836-    <1>| ...
  1794 | 00002299 | FF934938FF964B36FF-    <1>| ...
  1795 | 000022A2 | 944935FF9A4F3AFFA2-    <1>| ...
  1796 | 000022AB | 543EFFA7593FFFA85B-    <1>| ...
  1797 | 000022B4 | 40FFA75A41FF9C4E39-    <1>| ...
  1798 | 000022BD | FF9C5040FF986AB4FF-    <1>| ...
  1799 | 000022C6 | A37ED3FF47262EFF5A-    <1>| ...
  1800 | 000022CF | 2820FF8F4533FF9E54-    <1>| ...
  1801 | 000022D8 | 3FFF974C36FFA05640-    <1>| ...
  1802 | 000022E1 | FF9E5540FF91523DFF-    <1>| ...
  1803 | 000022EA | 804C3AFF               <1>| ...
  1804 | 000022EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163871, 4280229668, 42802301
  1805 | 000022F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1806 | 00002300 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1807 | 00002309 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1808 | 00002312 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1809 | 0000231B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1810 | 00002324 | 1EFF1E1E1EFF1F1E1E-    <1>| ...
  1811 | 0000232D | FF241F1FFF2C211FFF-    <1>| ...
  1812 | 00002336 | 3B2520FF512C23FF63-    <1>| ...
  1813 | 0000233F | 3125FF6D3427FF703A-    <1>| ...
  1814 | 00002348 | 41FF8E67CAFF7C455B-    <1>| ...
  1815 | 00002351 | FF622E25FF331615FF-    <1>| ...
  1816 | 0000235A | 59363BFF896D7FFF97-    <1>| ...
  1817 | 00002363 | 8DADFF9797C0FF979B-    <1>| ...
  1818 | 0000236C | C7FF9299CBFF939ACD-    <1>| ...
  1819 | 00002375 | FF99A2D5FF949ED3FF-    <1>| ...
  1820 | 0000237E | 8E95C7FF8A89B7FF91-    <1>| ...
  1821 | 00002387 | 81A6FF927286FF965F-    <1>| ...
  1822 | 00002390 | 60FF954E3FFF934A39-    <1>| ...
  1823 | 00002399 | FF8C4535FF843E2EFF-    <1>| ...
  1824 | 000023A2 | 8D4634FF9D523DFFA0-    <1>| ...
  1825 | 000023AB | 553FFFA3573EFFA559-    <1>| ...
  1826 | 000023B4 | 40FFA55942FF9F533F-    <1>| ...
  1827 | 000023BD | FF90494CFF976DCBFF-    <1>| ...
  1828 | 000023C6 | 986DAAFF4A2323FF5F-    <1>| ...
  1829 | 000023CF | 2D26FF894433FF9750-    <1>| ...
  1830 | 000023D8 | 3CFF94513EFF874D3B-    <1>| ...
  1831 | 000023E1 | FF724537FF4F352DFF-    <1>| ...
  1832 | 000023EA | 372925FF               <1>| ...
  1833 | 000023EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  1834 | 000023F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1835 | 00002400 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1836 | 00002409 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1837 | 00002412 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1838 | 0000241B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1839 | 00002424 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1840 | 0000242D | FF1E1E1EFF1F1E1EFF-    <1>| ...
  1841 | 00002436 | 231F1EFF2E221FFF49-    <1>| ...
  1842 | 0000243F | 2922FF5D3129FF6B3D-    <1>| ...
  1843 | 00002448 | 4BFF946DCBFF855276-    <1>| ...
  1844 | 00002451 | FF6A3733FF493D50FF-    <1>| ...
  1845 | 0000245A | 50577EFF8591C1FF8C-    <1>| ...
  1846 | 00002463 | 98CAFF8995C6FF8690-    <1>| ...
  1847 | 0000246C | C3FF878FC5FF8E96CC-    <1>| ...
  1848 | 00002475 | FF939ED2FF909ACFFF-    <1>| ...
  1849 | 0000247E | 8691C6FF8A91C5FF8A-    <1>| ...
  1850 | 00002487 | 90C4FF898FC2FF8E94-    <1>| ...
  1851 | 00002490 | C9FF968EB6FF926167-    <1>| ...
  1852 | 00002499 | FF844234FF77362AFF-    <1>| ...
  1853 | 000024A2 | 803C30FF964D3CFF92-    <1>| ...
  1854 | 000024AB | 4C39FF914A38FF9B51-    <1>| ...
  1855 | 000024B4 | 3DFF9C533DFF9B5240-    <1>| ...
  1856 | 000024BD | FF8D506FFF9E77DEFF-    <1>| ...
  1857 | 000024C6 | 86536EFF5D3232FF5F-    <1>| ...
  1858 | 000024CF | 322BFF764035FF7E48-    <1>| ...
  1859 | 000024D8 | 3BFF77483CFF4D342D-    <1>| ...
  1860 | 000024E1 | FF332824FF272221FF-    <1>| ...
  1861 | 000024EA | 211F1FFF               <1>| ...
  1862 | 000024EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  1863 | 000024F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1864 | 00002500 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1865 | 00002509 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1866 | 00002512 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1867 | 0000251B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1868 | 00002524 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1869 | 0000252D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1870 | 00002536 | 1E1E1EFF201E1EFF28-    <1>| ...
  1871 | 0000253F | 201FFF332423FF4C33-    <1>| ...
  1872 | 00002548 | 42FF7F5BA6FF895FAD-    <1>| ...
  1873 | 00002551 | FF705B79FF5C638EFF-    <1>| ...
  1874 | 0000255A | 444973FF707AA9FF82-    <1>| ...
  1875 | 00002563 | 8EC0FF8693C5FF8893-    <1>| ...
  1876 | 0000256C | C7FF8992C6FF8C94C9-    <1>| ...
  1877 | 00002575 | FF8991C5FF818ABDFF-    <1>| ...
  1878 | 0000257E | 737AAEFF6C70A2FF65-    <1>| ...
  1879 | 00002587 | 6897FF777AADFF898F-    <1>| ...
  1880 | 00002590 | C5FF9098CFFF8C92C3-    <1>| ...
  1881 | 00002599 | FF7C6E90FF5A3234FF-    <1>| ...
  1882 | 000025A2 | 5F2C24FF7D3D32FF7D-    <1>| ...
  1883 | 000025AB | 3F33FF70362DFF8846-    <1>| ...
  1884 | 000025B4 | 37FF8A4838FF89473B-    <1>| ...
  1885 | 000025BD | FF9460A3FF9C76D8FF-    <1>| ...
  1886 | 000025C6 | 74475AFF593230FF42-    <1>| ...
  1887 | 000025CF | 2A26FF3B2925FF3829-    <1>| ...
  1888 | 000025D8 | 26FF322724FF262120-    <1>| ...
  1889 | 000025E1 | FF201F1FFF1F1E1EFF-    <1>| ...
  1890 | 000025EA | 1E1E1EFF               <1>| ...
  1891 | 000025EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  1892 | 000025F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1893 | 00002600 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1894 | 00002609 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1895 | 00002612 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1896 | 0000261B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1897 | 00002624 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1898 | 0000262D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1899 | 00002636 | 1E1E1EFF1E1E1EFF1F-    <1>| ...
  1900 | 0000263F | 1E1EFF222020FF322A-    <1>| ...
  1901 | 00002648 | 39FF7155A0FF8B68D3-    <1>| ...
  1902 | 00002651 | FF675C8FFF5D638DFF-    <1>| ...
  1903 | 0000265A | 40456CFF565F8AFF78-    <1>| ...
  1904 | 00002663 | 83B4FF8390C0FF8491-    <1>| ...
  1905 | 0000266C | C4FF8991C6FF8A93C7-    <1>| ...
  1906 | 00002675 | FF8892C5FF7F87BBFF-    <1>| ...
  1907 | 0000267E | 797DB0FF6F71A1FF62-    <1>| ...
  1908 | 00002687 | 6591FF7275A5FF8187-    <1>| ...
  1909 | 00002690 | BAFF838BC0FF818ABF-    <1>| ...
  1910 | 00002699 | FF7078AEFF39385CFF-    <1>| ...
  1911 | 000026A2 | 4C2A31FF6A352CFF6C-    <1>| ...
  1912 | 000026AB | 382CFF4D2925FF6D3A-    <1>| ...
  1913 | 000026B4 | 31FF6D392CFF7B4242-    <1>| ...
  1914 | 000026BD | FF9265BEFF7E5DA0FF-    <1>| ...
  1915 | 000026C6 | 4E3643FF312424FF26-    <1>| ...
  1916 | 000026CF | 201FFF221F1FFF211F-    <1>| ...
  1917 | 000026D8 | 1FFF201F1EFF1F1E1E-    <1>| ...
  1918 | 000026E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1919 | 000026EA | 1E1E1EFF               <1>| ...
  1920 | 000026EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  1921 | 000026F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1922 | 00002700 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1923 | 00002709 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1924 | 00002712 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1925 | 0000271B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1926 | 00002724 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1927 | 0000272D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1928 | 00002736 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1929 | 0000273F | 1E1EFF1F1F1FFF2A26-    <1>| ...
  1930 | 00002748 | 32FF5C4885FF8161C4-    <1>| ...
  1931 | 00002751 | FF372A3FFF422F38FF-    <1>| ...
  1932 | 0000275A | 453E56FF3B4062FF63-    <1>| ...
  1933 | 00002763 | 6F9DFF7988B6FF8490-    <1>| ...
  1934 | 0000276C | C2FF8B94C9FF8A93C7-    <1>| ...
  1935 | 00002775 | FF808ABCFF7C83B3FF-    <1>| ...
  1936 | 0000277E | 7A80AFFF7A7DACFF7A-    <1>| ...
  1937 | 00002787 | 7FAEFF7376A8FF7175-    <1>| ...
  1938 | 00002790 | A8FF6B72A8FF6F7AB0-    <1>| ...
  1939 | 00002799 | FF6C74AEFF373B6AFF-    <1>| ...
  1940 | 000027A2 | 595273FF6A3935FF65-    <1>| ...
  1941 | 000027AB | 352CFF3B2421FF5931-    <1>| ...
  1942 | 000027B4 | 2CFF412723FF563544-    <1>| ...
  1943 | 000027BD | FF7E5CA9FF5D4A7DFF-    <1>| ...
  1944 | 000027C6 | 2E2831FF211F1FFF1F-    <1>| ...
  1945 | 000027CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1946 | 000027D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1947 | 000027E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1948 | 000027EA | 1E1E1EFF               <1>| ...
  1949 | 000027EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  1950 | 000027F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1951 | 00002800 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1952 | 00002809 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1953 | 00002812 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1954 | 0000281B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1955 | 00002824 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1956 | 0000282D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1957 | 00002836 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1958 | 0000283F | 1E1EFF1E1E1FFF2522-    <1>| ...
  1959 | 00002848 | 2AFF453762FF6A549D-    <1>| ...
  1960 | 00002851 | FF272431FF1E1E1EFF-    <1>| ...
  1961 | 0000285A | 1D1D1DFF1F1F23FF41-    <1>| ...
  1962 | 00002863 | 4560FF6C79A7FF808C-    <1>| ...
  1963 | 0000286C | BFFF818BC0FF7C87B7-    <1>| ...
  1964 | 00002875 | FF7780AFFF747AA7FF-    <1>| ...
  1965 | 0000287E | 7377A1FF70729AFF66-    <1>| ...
  1966 | 00002887 | 6992FF5D608AFF5F61-    <1>| ...
  1967 | 00002890 | 90FF606396FF6772A8-    <1>| ...
  1968 | 00002899 | FF6F78B0FF44487CFF-    <1>| ...
  1969 | 000028A2 | 5D5E8DFF56373FFF4F-    <1>| ...
  1970 | 000028AB | 2E2AFF312423FF2E21-    <1>| ...
  1971 | 000028B4 | 21FF201E1EFF403053-    <1>| ...
  1972 | 000028BD | FF765BA7FF3D3350FF-    <1>| ...
  1973 | 000028C6 | 222125FF1E1E1EFF1E-    <1>| ...
  1974 | 000028CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1975 | 000028D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1976 | 000028E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1977 | 000028EA | 1E1E1EFF               <1>| ...
  1978 | 000028EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  1979 | 000028F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1980 | 00002900 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1981 | 00002909 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1982 | 00002912 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1983 | 0000291B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  1984 | 00002924 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  1985 | 0000292D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  1986 | 00002936 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  1987 | 0000293F | 1E1EFF1E1E1EFF2220-    <1>| ...
  1988 | 00002948 | 25FF382F4CFF69559A-    <1>| ...
  1989 | 00002951 | FF2E293AFF1E1E1EFF-    <1>| ...
  1990 | 0000295A | 1E1E1EFF1D1D1DFF20-    <1>| ...
  1991 | 00002963 | 2027FF65719BFF7986-    <1>| ...
  1992 | 0000296C | B6FF6F79ABFF68709E-    <1>| ...
  1993 | 00002975 | FF60648FFF4D4C6EFF-    <1>| ...
  1994 | 0000297E | 373550FF302B42FF35-    <1>| ...
  1995 | 00002987 | 2F48FF3D3854FF4744-    <1>| ...
  1996 | 00002990 | 66FF54517CFF616593-    <1>| ...
  1997 | 00002999 | FF6E75AAFF62659AFF-    <1>| ...
  1998 | 000029A2 | 4E507FFF463845FF31-    <1>| ...
  1999 | 000029AB | 2525FF1E1E1EFF1E1E-    <1>| ...
  2000 | 000029B4 | 1EFF1E1E1EFF7358A7-    <1>| ...
  2001 | 000029BD | FF735BA4FF302B3CFF-    <1>| ...
  2002 | 000029C6 | 1F1F20FF1E1E1EFF1E-    <1>| ...
  2003 | 000029CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2004 | 000029D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2005 | 000029E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2006 | 000029EA | 1E1E1EFF               <1>| ...
  2007 | 000029EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2008 | 000029F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2009 | 00002A00 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2010 | 00002A09 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2011 | 00002A12 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2012 | 00002A1B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2013 | 00002A24 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2014 | 00002A2D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2015 | 00002A36 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2016 | 00002A3F | 1E1EFF1E1E1EFF2120-    <1>| ...
  2017 | 00002A48 | 23FF352E46FF675395-    <1>| ...
  2018 | 00002A51 | FF2D2839FF1E1E1EFF-    <1>| ...
  2019 | 00002A5A | 1E1E1EFF1D1D1EFF1D-    <1>| ...
  2020 | 00002A63 | 1D20FF616A94FF6D7A-    <1>| ...
  2021 | 00002A6C | AAFF616896FF51537B-    <1>| ...
  2022 | 00002A75 | FF3F3E5DFF37344EFF-    <1>| ...
  2023 | 00002A7E | 383249FF362F45FF34-    <1>| ...
  2024 | 00002A87 | 2E43FF363049FF3D39-    <1>| ...
  2025 | 00002A90 | 57FF4B4870FF565883-    <1>| ...
  2026 | 00002A99 | FF646796FF7278ACFF-    <1>| ...
  2027 | 00002AA2 | 454670FF232126FF1E-    <1>| ...
  2028 | 00002AAB | 1D1DFF1E1E1EFF1E1E-    <1>| ...
  2029 | 00002AB4 | 1EFF1E1C20FF8F6FD1-    <1>| ...
  2030 | 00002ABD | FF5B4A80FF292630FF-    <1>| ...
  2031 | 00002AC6 | 1F1F1FFF1E1E1EFF1E-    <1>| ...
  2032 | 00002ACF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2033 | 00002AD8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2034 | 00002AE1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2035 | 00002AEA | 1E1E1EFF               <1>| ...
  2036 | 00002AEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2037 | 00002AF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2038 | 00002B00 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2039 | 00002B09 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2040 | 00002B12 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2041 | 00002B1B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2042 | 00002B24 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2043 | 00002B2D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2044 | 00002B36 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2045 | 00002B3F | 1E1EFF1E1E1EFF201F-    <1>| ...
  2046 | 00002B48 | 22FF322B41FF5F4B8B-    <1>| ...
  2047 | 00002B51 | FF292434FF1E1E1EFF-    <1>| ...
  2048 | 00002B5A | 1E1E1EFF1E1E1EFF1D-    <1>| ...
  2049 | 00002B63 | 1D1FFF596089FF5E66-    <1>| ...
  2050 | 00002B6C | 96FF51557FFF46486C-    <1>| ...
  2051 | 00002B75 | FF474868FF494869FF-    <1>| ...
  2052 | 00002B7E | 444262FF37334EFF34-    <1>| ...
  2053 | 00002B87 | 3049FF393753FF3E3C-    <1>| ...
  2054 | 00002B90 | 5BFF49476DFF595A89-    <1>| ...
  2055 | 00002B99 | FF636797FF686F9FFF-    <1>| ...
  2056 | 00002BA2 | 4F537BFF1D1C20FF1D-    <1>| ...
  2057 | 00002BAB | 1D1EFF1E1E1EFF1E1E-    <1>| ...
  2058 | 00002BB4 | 1EFF221F2AFF6C559F-    <1>| ...
  2059 | 00002BBD | FF403559FF232227FF-    <1>| ...
  2060 | 00002BC6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2061 | 00002BCF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2062 | 00002BD8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2063 | 00002BE1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2064 | 00002BEA | 1E1E1EFF               <1>| ...
  2065 | 00002BEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2066 | 00002BF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2067 | 00002C00 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2068 | 00002C09 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2069 | 00002C12 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2070 | 00002C1B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2071 | 00002C24 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2072 | 00002C2D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2073 | 00002C36 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2074 | 00002C3F | 1E1EFF1E1E1EFF211F-    <1>| ...
  2075 | 00002C48 | 22FF322A40FF5D498A-    <1>| ...
  2076 | 00002C51 | FF2A2537FF1E1E1EFF-    <1>| ...
  2077 | 00002C5A | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2078 | 00002C63 | 1E1EFF535880FF545B-    <1>| ...
  2079 | 00002C6C | 89FF4E527BFF53567E-    <1>| ...
  2080 | 00002C75 | FF5C628AFF5F6794FF-    <1>| ...
  2081 | 00002C7E | 656D9DFF6F79A8FF70-    <1>| ...
  2082 | 00002C87 | 7AADFF6D78AFFF7580-    <1>| ...
  2083 | 00002C90 | B7FF7A84BCFF717BB1-    <1>| ...
  2084 | 00002C99 | FF6972A5FF6772A1FF-    <1>| ...
  2085 | 00002CA2 | 636A94FF1D1D20FF1D-    <1>| ...
  2086 | 00002CAB | 1D1EFF1E1E1EFF1E1E-    <1>| ...
  2087 | 00002CB4 | 1EFF2D263DFF685497-    <1>| ...
  2088 | 00002CBD | FF352E45FF212023FF-    <1>| ...
  2089 | 00002CC6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2090 | 00002CCF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2091 | 00002CD8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2092 | 00002CE1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2093 | 00002CEA | 1E1E1EFF               <1>| ...
  2094 | 00002CEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2095 | 00002CF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2096 | 00002D00 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2097 | 00002D09 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2098 | 00002D12 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2099 | 00002D1B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2100 | 00002D24 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2101 | 00002D2D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2102 | 00002D36 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2103 | 00002D3F | 1E1EFF1E1E1EFF201F-    <1>| ...
  2104 | 00002D48 | 22FF312A3EFF5F498A-    <1>| ...
  2105 | 00002D51 | FF342B4BFF1E1E1EFF-    <1>| ...
  2106 | 00002D5A | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2107 | 00002D63 | 1E1EFF4D5278FF5158-    <1>| ...
  2108 | 00002D6C | 84FF5E648FFF7079A6-    <1>| ...
  2109 | 00002D75 | FF7582B2FF7D8BC1FF-    <1>| ...
  2110 | 00002D7E | 8895CDFF95A4DCFF95-    <1>| ...
  2111 | 00002D87 | A5E0FF8F9CDBFF8895-    <1>| ...
  2112 | 00002D90 | D5FF8E9CDBFF8594D1-    <1>| ...
  2113 | 00002D99 | FF7281B9FF6D7DAFFF-    <1>| ...
  2114 | 00002DA2 | 6C77A5FF292A37FF1D-    <1>| ...
  2115 | 00002DAB | 1D1DFF1E1E1EFF1D1D-    <1>| ...
  2116 | 00002DB4 | 1FFF423466FF5B4A87-    <1>| ...
  2117 | 00002DBD | FF2D2838FF1F1F20FF-    <1>| ...
  2118 | 00002DC6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2119 | 00002DCF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2120 | 00002DD8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2121 | 00002DE1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2122 | 00002DEA | 1E1E1EFF               <1>| ...
  2123 | 00002DEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2124 | 00002DF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2125 | 00002E00 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2126 | 00002E09 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2127 | 00002E12 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2128 | 00002E1B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2129 | 00002E24 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2130 | 00002E2D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2131 | 00002E36 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2132 | 00002E3F | 1E1EFF1E1E1EFF201F-    <1>| ...
  2133 | 00002E48 | 21FF2D2739FF5B4786-    <1>| ...
  2134 | 00002E51 | FF4C3C78FF1E1E1EFF-    <1>| ...
  2135 | 00002E5A | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2136 | 00002E63 | 1E1EFF4A4E74FF5D65-    <1>| ...
  2137 | 00002E6C | 91FF7482B1FF818FC1-    <1>| ...
  2138 | 00002E75 | FF8496CDFF8B9CD8FF-    <1>| ...
  2139 | 00002E7E | 91A1DCFF99A7E4FF96-    <1>| ...
  2140 | 00002E87 | A5E5FF92A0E2FF8D9B-    <1>| ...
  2141 | 00002E90 | DEFF8A99DCFF8797D9-    <1>| ...
  2142 | 00002E99 | FF7A8BC9FF7E8EC5FF-    <1>| ...
  2143 | 00002EA2 | 7280B8FF5D648BFF1E-    <1>| ...
  2144 | 00002EAB | 1E22FF1D1D20FF1D18-    <1>| ...
  2145 | 00002EB4 | 48FF614CB2FF51447C-    <1>| ...
  2146 | 00002EBD | FF282531FF1E1E1FFF-    <1>| ...
  2147 | 00002EC6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2148 | 00002ECF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2149 | 00002ED8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2150 | 00002EE1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2151 | 00002EEA | 1E1E1EFF               <1>| ...
  2152 | 00002EEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2153 | 00002EF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2154 | 00002F00 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2155 | 00002F09 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2156 | 00002F12 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2157 | 00002F1B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2158 | 00002F24 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2159 | 00002F2D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2160 | 00002F36 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2161 | 00002F3F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2162 | 00002F48 | 1FFF27232FFF4C3C6F-    <1>| ...
  2163 | 00002F51 | FF5D4796FF1D1D20FF-    <1>| ...
  2164 | 00002F5A | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2165 | 00002F63 | 1E1EFF4F537DFF6E7A-    <1>| ...
  2166 | 00002F6C | ADFF8692C8FF8C9BD0-    <1>| ...
  2167 | 00002F75 | FF8D9ED6FF8D9DDBFF-    <1>| ...
  2168 | 00002F7E | 8D9DDDFF8F9DE0FF83-    <1>| ...
  2169 | 00002F87 | 91D7FF6976B9FF5C68-    <1>| ...
  2170 | 00002F90 | AAFF5C69ADFF6875B8-    <1>| ...
  2171 | 00002F99 | FF7384C3FF8494CCFF-    <1>| ...
  2172 | 00002FA2 | 7887BEFF6B77ABFF26-    <1>| ...
  2173 | 00002FAB | 2734FF1C1B25FF1B18-    <1>| ...
  2174 | 00002FB4 | 82FF5545C2FF564989-    <1>| ...
  2175 | 00002FBD | FF292634FF1F1E20FF-    <1>| ...
  2176 | 00002FC6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2177 | 00002FCF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2178 | 00002FD8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2179 | 00002FE1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2180 | 00002FEA | 1E1E1EFF               <1>| ...
  2181 | 00002FEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2182 | 00002FF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2183 | 00003000 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2184 | 00003009 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2185 | 00003012 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2186 | 0000301B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2187 | 00003024 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2188 | 0000302D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2189 | 00003036 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2190 | 0000303F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2191 | 00003048 | 1FFF232128FF403359-    <1>| ...
  2192 | 00003051 | FF654DA0FF261F4DFF-    <1>| ...
  2193 | 0000305A | 1C1B23FF1D1D1DFF1E-    <1>| ...
  2194 | 00003063 | 1E24FF5F6695FF7F8A-    <1>| ...
  2195 | 0000306C | C3FF8E9BD5FF91A1DB-    <1>| ...
  2196 | 00003075 | FF94A4DAFF8F9ED9FF-    <1>| ...
  2197 | 0000307E | 8696D9FF7D8BD1FF65-    <1>| ...
  2198 | 00003087 | 6EB6FF6067B2FF686E-    <1>| ...
  2199 | 00003090 | BCFF666CBAFF5A62AB-    <1>| ...
  2200 | 00003099 | FF6876B6FF8B9AD2FF-    <1>| ...
  2201 | 000030A2 | 7B8AC2FF7581BBFF47-    <1>| ...
  2202 | 000030AB | 4B77FF1C1C23FF1A16-    <1>| ...
  2203 | 000030B4 | 73FF4136BBFF5C4F96-    <1>| ...
  2204 | 000030BD | FF2C2939FF1F1F21FF-    <1>| ...
  2205 | 000030C6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2206 | 000030CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2207 | 000030D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2208 | 000030E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2209 | 000030EA | 1E1E1EFF               <1>| ...
  2210 | 000030EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2211 | 000030F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2212 | 00003100 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2213 | 00003109 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2214 | 00003112 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2215 | 0000311B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2216 | 00003124 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2217 | 0000312D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2218 | 00003136 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2219 | 0000313F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2220 | 00003148 | 1FFF222026FF3E3254-    <1>| ...
  2221 | 00003151 | FF6750A0FF4838A3FF-    <1>| ...
  2222 | 0000315A | 1D194CFF1C1C1DFF2A-    <1>| ...
  2223 | 00003163 | 2B3FFF6B75ACFF8690-    <1>| ...
  2224 | 0000316C | CDFF94A0DBFF98A6E0-    <1>| ...
  2225 | 00003175 | FF9DADE5FF98A9E2FF-    <1>| ...
  2226 | 0000317E | 8090CFFF7D8BD1FF82-    <1>| ...
  2227 | 00003187 | 89D7FF6D6BC3FF5957-    <1>| ...
  2228 | 00003190 | A9FF6161B5FF6769BC-    <1>| ...
  2229 | 00003199 | FF6A78B4FF8999D1FF-    <1>| ...
  2230 | 000031A2 | 808EC6FF7583BBFF6D-    <1>| ...
  2231 | 000031AB | 74B0FF1B1B26FF1815-    <1>| ...
  2232 | 000031B4 | 4FFF3329A9FF5B4F98-    <1>| ...
  2233 | 000031BD | FF2D293BFF1F1F21FF-    <1>| ...
  2234 | 000031C6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2235 | 000031CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2236 | 000031D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2237 | 000031E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2238 | 000031EA | 1E1E1EFF               <1>| ...
  2239 | 000031EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2240 | 000031F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2241 | 00003200 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2242 | 00003209 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2243 | 00003212 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2244 | 0000321B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2245 | 00003224 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2246 | 0000322D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2247 | 00003236 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2248 | 0000323F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2249 | 00003248 | 1EFF211F23FF382E49-    <1>| ...
  2250 | 00003251 | FF7058A6FF7C62CFFF-    <1>| ...
  2251 | 0000325A | 251F85FF1A1A24FF40-    <1>| ...
  2252 | 00003263 | 4164FF7681BEFF8994-    <1>| ...
  2253 | 0000326C | D2FF929EDAFF99A7DF-    <1>| ...
  2254 | 00003275 | FF9EAEE5FF9CACE5FF-    <1>| ...
  2255 | 0000327E | 8B9AD8FF747EC1FF5A-    <1>| ...
  2256 | 00003287 | 60ACFF171A4BFF090B-    <1>| ...
  2257 | 00003290 | 2FFF151549FF484D8E-    <1>| ...
  2258 | 00003299 | FF6974ADFF8492CBFF-    <1>| ...
  2259 | 000032A2 | 8391CAFF7884BCFF6E-    <1>| ...
  2260 | 000032AB | 77B7FF212236FF1514-    <1>| ...
  2261 | 000032B4 | 4CFF3B30AEFF534789-    <1>| ...
  2262 | 000032BD | FF292736FF1F1F20FF-    <1>| ...
  2263 | 000032C6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2264 | 000032CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2265 | 000032D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2266 | 000032E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2267 | 000032EA | 1E1E1EFF               <1>| ...
  2268 | 000032EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2269 | 000032F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2270 | 00003300 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2271 | 00003309 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2272 | 00003312 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2273 | 0000331B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2274 | 00003324 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2275 | 0000332D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2276 | 00003336 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2277 | 0000333F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2278 | 00003348 | 1EFF1F1F20FF2F293A-    <1>| ...
  2279 | 00003351 | FF6C5599FF8667CCFF-    <1>| ...
  2280 | 0000335A | 3A2FAAFF18174CFF45-    <1>| ...
  2281 | 00003363 | 4977FF7A86C6FF8591-    <1>| ...
  2282 | 0000336C | CFFF92A0DBFF9BA9E0-    <1>| ...
  2283 | 00003375 | FF9FAFE6FF9BACE6FF-    <1>| ...
  2284 | 0000337E | 96A3E0FF9097D7FF7A-    <1>| ...
  2285 | 00003387 | 80C4FF404383FF5E5F-    <1>| ...
  2286 | 00003390 | 9EFF676AA9FF6A72B1-    <1>| ...
  2287 | 00003399 | FF747EBAFF8692D1FF-    <1>| ...
  2288 | 000033A2 | 8997D1FF7886BDFF70-    <1>| ...
  2289 | 000033AB | 7BB9FF2D2E4EFF1414-    <1>| ...
  2290 | 000033B4 | 55FF373093FF3D3666-    <1>| ...
  2291 | 000033BD | FF24222CFF1E1E1FFF-    <1>| ...
  2292 | 000033C6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2293 | 000033CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2294 | 000033D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2295 | 000033E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2296 | 000033EA | 1E1E1EFF               <1>| ...
  2297 | 000033EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2298 | 000033F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2299 | 00003400 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2300 | 00003409 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2301 | 00003412 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2302 | 0000341B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2303 | 00003424 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2304 | 0000342D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2305 | 00003436 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2306 | 0000343F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2307 | 00003448 | 1EFF1F1F1FFF292630-    <1>| ...
  2308 | 00003451 | FF5B487FFF8668C7FF-    <1>| ...
  2309 | 0000345A | 5947C5FF201C7AFF34-    <1>| ...
  2310 | 00003463 | 3866FF7680C1FF8995-    <1>| ...
  2311 | 0000346C | D5FF96A3DFFF9DA9E1-    <1>| ...
  2312 | 00003475 | FF9EACE4FF9CACE6FF-    <1>| ...
  2313 | 0000347E | 9BA8E9FF909BDDFF8D-    <1>| ...
  2314 | 00003487 | 94D6FF8B93D6FF8A92-    <1>| ...
  2315 | 00003490 | D0FF8690CDFF6D78B5-    <1>| ...
  2316 | 00003499 | FF747DBFFF838ED2FF-    <1>| ...
  2317 | 000034A2 | 8D99D6FF7F8DC8FF75-    <1>| ...
  2318 | 000034AB | 80BDFF373B60FF1516-    <1>| ...
  2319 | 000034B4 | 47FF322E8AFF2C2949-    <1>| ...
  2320 | 000034BD | FF201F24FF1E1E1EFF-    <1>| ...
  2321 | 000034C6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2322 | 000034CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2323 | 000034D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2324 | 000034E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2325 | 000034EA | 1E1E1EFF               <1>| ...
  2326 | 000034EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2327 | 000034F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2328 | 00003500 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2329 | 00003509 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2330 | 00003512 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2331 | 0000351B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2332 | 00003524 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2333 | 0000352D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2334 | 00003536 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2335 | 0000353F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2336 | 00003548 | 1EFF1E1E1FFF242229-    <1>| ...
  2337 | 00003551 | FF473962FF775BB0FF-    <1>| ...
  2338 | 0000355A | 7D63CEFF332AA2FF25-    <1>| ...
  2339 | 00003563 | 275DFF757FC0FF8D99-    <1>| ...
  2340 | 0000356C | D8FF98A6E2FF9CABE3-    <1>| ...
  2341 | 00003575 | FF9EACE5FF9EADE9FF-    <1>| ...
  2342 | 0000357E | 95A2E6FF96A0E6FF8C-    <1>| ...
  2343 | 00003587 | 93D9FF878ED3FF7980-    <1>| ...
  2344 | 00003590 | C1FF6B73B3FF4F5899-    <1>| ...
  2345 | 00003599 | FF4F569CFF747FC3FF-    <1>| ...
  2346 | 000035A2 | 8895D4FF838FCDFF78-    <1>| ...
  2347 | 000035AB | 82C2FF3D406AFF1414-    <1>| ...
  2348 | 000035B4 | 59FF2F2A87FF25223F-    <1>| ...
  2349 | 000035BD | FF1E1E21FF1E1E1EFF-    <1>| ...
  2350 | 000035C6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2351 | 000035CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2352 | 000035D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2353 | 000035E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2354 | 000035EA | 1E1E1EFF               <1>| ...
  2355 | 000035EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2356 | 000035F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2357 | 00003600 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2358 | 00003609 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2359 | 00003612 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2360 | 0000361B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2361 | 00003624 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2362 | 0000362D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2363 | 00003636 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2364 | 0000363F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2365 | 00003648 | 1EFF1E1E1EFF212025-    <1>| ...
  2366 | 00003651 | FF392F4CFF7458A7FF-    <1>| ...
  2367 | 0000365A | 8F6FD0FF5748C1FF1A-    <1>| ...
  2368 | 00003663 | 1B79FF767FC2FF909A-    <1>| ...
  2369 | 0000366C | DAFF99A4E2FF9DADE5-    <1>| ...
  2370 | 00003675 | FFA2B2EBFFA0AEECFF-    <1>| ...
  2371 | 0000367E | 99A4E9FF909BE4FF6D-    <1>| ...
  2372 | 00003687 | 76C4FF4C5398FF5B61-    <1>| ...
  2373 | 00003690 | A6FF4C5397FF32397B-    <1>| ...
  2374 | 00003699 | FF43498FFF707AC0FF-    <1>| ...
  2375 | 000036A2 | 8492D4FF8491D0FF78-    <1>| ...
  2376 | 000036AB | 84C4FF3C406AFF1516-    <1>| ...
  2377 | 000036B4 | 5DFF2B2784FF23213C-    <1>| ...
  2378 | 000036BD | FF1E1E21FF1E1E1EFF-    <1>| ...
  2379 | 000036C6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2380 | 000036CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2381 | 000036D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2382 | 000036E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2383 | 000036EA | 1E1E1EFF               <1>| ...
  2384 | 000036EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2385 | 000036F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2386 | 00003700 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2387 | 00003709 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2388 | 00003712 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2389 | 0000371B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2390 | 00003724 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2391 | 0000372D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2392 | 00003736 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2393 | 0000373F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2394 | 00003748 | 1EFF1E1E1EFF201F22-    <1>| ...
  2395 | 00003751 | FF322A40FF6C529BFF-    <1>| ...
  2396 | 0000375A | 8666C2FF6D56C5FF21-    <1>| ...
  2397 | 00003763 | 1F8FFF696FB7FF8E9B-    <1>| ...
  2398 | 0000376C | DBFF99A7E2FF9BAAE6-    <1>| ...
  2399 | 00003775 | FF9EADEAFF9AA8EAFF-    <1>| ...
  2400 | 0000377E | 9BA6ECFF939FE6FF80-    <1>| ...
  2401 | 00003787 | 89D8FF6F75C1FF858B-    <1>| ...
  2402 | 00003790 | D1FF8389CFFF6369AE-    <1>| ...
  2403 | 00003799 | FF5A63A8FF7985C9FF-    <1>| ...
  2404 | 000037A2 | 8495D6FF8292D2FF73-    <1>| ...
  2405 | 000037AB | 81C3FF373C65FF1717-    <1>| ...
  2406 | 000037B4 | 60FF282481FF221F39-    <1>| ...
  2407 | 000037BD | FF1E1D20FF1E1E1EFF-    <1>| ...
  2408 | 000037C6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2409 | 000037CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2410 | 000037D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2411 | 000037E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2412 | 000037EA | 1E1E1EFF               <1>| ...
  2413 | 000037EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2414 | 000037F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2415 | 00003800 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2416 | 00003809 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2417 | 00003812 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2418 | 0000381B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2419 | 00003824 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2420 | 0000382D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2421 | 00003836 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2422 | 0000383F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2423 | 00003848 | 1EFF1E1E1EFF201F21-    <1>| ...
  2424 | 00003851 | FF2E2839FF654D90FF-    <1>| ...
  2425 | 0000385A | 8161B9FF795DC4FF2F-    <1>| ...
  2426 | 00003863 | 279BFF4F549EFF8A98-    <1>| ...
  2427 | 0000386C | DAFF98A7E0FF9BACE6-    <1>| ...
  2428 | 00003875 | FF9EAFE9FF9AACE7FF-    <1>| ...
  2429 | 0000387E | 95A4E7FF939EE7FF87-    <1>| ...
  2430 | 00003887 | 8EDFFF898DDCFF9CA1-    <1>| ...
  2431 | 00003890 | E8FF8C92DAFF656DB5-    <1>| ...
  2432 | 00003899 | FF6A76B7FF8995D3FF-    <1>| ...
  2433 | 000038A2 | 8A99D5FF798BC9FF6E-    <1>| ...
  2434 | 000038AB | 7DBEFF30335EFF1B19-    <1>| ...
  2435 | 000038B4 | 75FF282480FF201E36-    <1>| ...
  2436 | 000038BD | FF1D1D20FF1E1E1EFF-    <1>| ...
  2437 | 000038C6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2438 | 000038CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2439 | 000038D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2440 | 000038E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2441 | 000038EA | 1E1E1EFF               <1>| ...
  2442 | 000038EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2443 | 000038F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2444 | 00003900 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2445 | 00003909 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2446 | 00003912 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2447 | 0000391B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2448 | 00003924 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2449 | 0000392D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2450 | 00003936 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2451 | 0000393F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2452 | 00003948 | 1EFF1E1E1EFF1F1E20-    <1>| ...
  2453 | 00003951 | FF2A2534FF5B4684FF-    <1>| ...
  2454 | 0000395A | 795BAFFF8062C3FF44-    <1>| ...
  2455 | 00003963 | 34A3FF33377EFF8692-    <1>| ...
  2456 | 0000396C | D1FF95A4DFFF9BABE3-    <1>| ...
  2457 | 00003975 | FF9EAFE3FFA2B1E3FF-    <1>| ...
  2458 | 0000397E | 96A4DCFF8693D9FF80-    <1>| ...
  2459 | 00003987 | 88D9FF868BD7FF858B-    <1>| ...
  2460 | 00003990 | D8FF7981D0FF5D66AE-    <1>| ...
  2461 | 00003999 | FF727CBAFF8590C8FF-    <1>| ...
  2462 | 000039A2 | 8491C9FF6F81BBFF71-    <1>| ...
  2463 | 000039AB | 7FBDFF242545FF1E19-    <1>| ...
  2464 | 000039B4 | 7EFF2B267CFF201E33-    <1>| ...
  2465 | 000039BD | FF1D1D20FF1E1E1EFF-    <1>| ...
  2466 | 000039C6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2467 | 000039CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2468 | 000039D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2469 | 000039E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2470 | 000039EA | 1E1E1EFF               <1>| ...
  2471 | 000039EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2472 | 000039F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2473 | 00003A00 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2474 | 00003A09 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2475 | 00003A12 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2476 | 00003A1B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2477 | 00003A24 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2478 | 00003A2D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2479 | 00003A36 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2480 | 00003A3F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2481 | 00003A48 | 1EFF1E1E1EFF1F1E1F-    <1>| ...
  2482 | 00003A51 | FF27232FFF4E3D71FF-    <1>| ...
  2483 | 00003A5A | 7155A7FF7E60BCFF5A-    <1>| ...
  2484 | 00003A63 | 45AAFF1D1A61FF6C72-    <1>| ...
  2485 | 00003A6C | AAFF93A1D8FF92A2D8-    <1>| ...
  2486 | 00003A75 | FF8B98D1FF9EA7D9FF-    <1>| ...
  2487 | 00003A7E | 939ACFFF838CCAFF7C-    <1>| ...
  2488 | 00003A87 | 87CBFF8389D2FF848D-    <1>| ...
  2489 | 00003A90 | D7FF737CC6FF434C88-    <1>| ...
  2490 | 00003A99 | FF5C6297FF5C6290FF-    <1>| ...
  2491 | 00003AA2 | 6E77AAFF6671ABFF5E-    <1>| ...
  2492 | 00003AAB | 6597FF1B1B26FF1B18-    <1>| ...
  2493 | 00003AB4 | 5DFF312B76FF212030-    <1>| ...
  2494 | 00003ABD | FF1E1E1FFF1E1E1EFF-    <1>| ...
  2495 | 00003AC6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2496 | 00003ACF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2497 | 00003AD8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2498 | 00003AE1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2499 | 00003AEA | 1E1E1EFF               <1>| ...
  2500 | 00003AEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2501 | 00003AF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2502 | 00003B00 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2503 | 00003B09 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2504 | 00003B12 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2505 | 00003B1B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2506 | 00003B24 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2507 | 00003B2D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2508 | 00003B36 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2509 | 00003B3F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2510 | 00003B48 | 1EFF1E1E1EFF1E1E1F-    <1>| ...
  2511 | 00003B51 | FF232028FF3E3158FF-    <1>| ...
  2512 | 00003B5A | 634B95FF7C5EB5FF7B-    <1>| ...
  2513 | 00003B63 | 5FC0FF2E246AFF1114-    <1>| ...
  2514 | 00003B6C | 3FFF485083FF5F6DA6-    <1>| ...
  2515 | 00003B75 | FF414C83FF535985FF-    <1>| ...
  2516 | 00003B7E | 33395FFF5E669DFF70-    <1>| ...
  2517 | 00003B87 | 7CB6FF7681C0FF8991-    <1>| ...
  2518 | 00003B90 | D7FF737CC0FF4C5380-    <1>| ...
  2519 | 00003B99 | FF494C75FF4A4D76FF-    <1>| ...
  2520 | 00003BA2 | 5F689CFF57629AFF41-    <1>| ...
  2521 | 00003BAB | 4363FF212136FF302B-    <1>| ...
  2522 | 00003BB4 | 8DFF373071FF23212E-    <1>| ...
  2523 | 00003BBD | FF1E1E1FFF1E1E1EFF-    <1>| ...
  2524 | 00003BC6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2525 | 00003BCF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2526 | 00003BD8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2527 | 00003BE1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2528 | 00003BEA | 1E1E1EFF               <1>| ...
  2529 | 00003BEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2530 | 00003BF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2531 | 00003C00 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2532 | 00003C09 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2533 | 00003C12 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2534 | 00003C1B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2535 | 00003C24 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2536 | 00003C2D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2537 | 00003C36 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2538 | 00003C3F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2539 | 00003C48 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2540 | 00003C51 | FF201E22FF2F273FFF-    <1>| ...
  2541 | 00003C5A | 594389FF7356ACFF83-    <1>| ...
  2542 | 00003C63 | 65C1FF7257B2FF372B-    <1>| ...
  2543 | 00003C6C | 68FF292655FF504F7A-    <1>| ...
  2544 | 00003C75 | FF53588AFF7075A7FF-    <1>| ...
  2545 | 00003C7E | 596191FF566098FF67-    <1>| ...
  2546 | 00003C87 | 71A8FF5E689FFF828A-    <1>| ...
  2547 | 00003C90 | C4FF6067A1FF5B6393-    <1>| ...
  2548 | 00003C99 | FF565F91FF656FA5FF-    <1>| ...
  2549 | 00003CA2 | 6573A8FF464F7DFF21-    <1>| ...
  2550 | 00003CAB | 2150FF29228BFF4034-    <1>| ...
  2551 | 00003CB4 | 8FFF332C59FF222028-    <1>| ...
  2552 | 00003CBD | FF1E1E1FFF1E1E1EFF-    <1>| ...
  2553 | 00003CC6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2554 | 00003CCF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2555 | 00003CD8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2556 | 00003CE1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2557 | 00003CEA | 1E1E1EFF               <1>| ...
  2558 | 00003CEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2559 | 00003CF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2560 | 00003D00 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2561 | 00003D09 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2562 | 00003D12 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2563 | 00003D1B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2564 | 00003D24 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2565 | 00003D2D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2566 | 00003D36 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2567 | 00003D3F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2568 | 00003D48 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2569 | 00003D51 | FF1F1E20FF292432FF-    <1>| ...
  2570 | 00003D5A | 503D7BFF6A4DA6FF7A-    <1>| ...
  2571 | 00003D63 | 5BB9FF8B6ACCFF8667-    <1>| ...
  2572 | 00003D6C | CDFF7B5EC3FF604B9D-    <1>| ...
  2573 | 00003D75 | FF342F6AFF494B81FF-    <1>| ...
  2574 | 00003D7E | 6F75ADFF6972A7FF62-    <1>| ...
  2575 | 00003D87 | 6AA2FF646AA5FF7B84-    <1>| ...
  2576 | 00003D90 | C2FF757FBCFF545B93-    <1>| ...
  2577 | 00003D99 | FF393E6EFF3A3F73FF-    <1>| ...
  2578 | 00003DA2 | 323777FF222177FF31-    <1>| ...
  2579 | 00003DAB | 279CFF4F3FAAFF4C3E-    <1>| ...
  2580 | 00003DB4 | 8EFF2E2847FF201F24-    <1>| ...
  2581 | 00003DBD | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2582 | 00003DC6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2583 | 00003DCF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2584 | 00003DD8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2585 | 00003DE1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2586 | 00003DEA | 1E1E1EFF               <1>| ...
  2587 | 00003DEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2588 | 00003DF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2589 | 00003E00 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2590 | 00003E09 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2591 | 00003E12 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2592 | 00003E1B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2593 | 00003E24 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2594 | 00003E2D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2595 | 00003E36 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2596 | 00003E3F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2597 | 00003E48 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2598 | 00003E51 | FF1E1E1FFF25222CFF-    <1>| ...
  2599 | 00003E5A | 453568FF6449A2FF70-    <1>| ...
  2600 | 00003E63 | 50ADFF7B5CB8FF6D54-    <1>| ...
  2601 | 00003E6C | A3FF6F55A9FF7F62C3-    <1>| ...
  2602 | 00003E75 | FF7E62C5FF6955ACFF-    <1>| ...
  2603 | 00003E7E | 393272FF2D2C5FFF33-    <1>| ...
  2604 | 00003E87 | 356DFF393B84FF4143-    <1>| ...
  2605 | 00003E90 | 95FF474BA2FF343598-    <1>| ...
  2606 | 00003E99 | FF25248DFF272194FF-    <1>| ...
  2607 | 00003EA2 | 3228A1FF5B48B6FF69-    <1>| ...
  2608 | 00003EAB | 53B7FF624DA4FF4F3F-    <1>| ...
  2609 | 00003EB4 | 89FF2C2642FF201F23-    <1>| ...
  2610 | 00003EBD | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2611 | 00003EC6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2612 | 00003ECF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2613 | 00003ED8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2614 | 00003EE1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2615 | 00003EEA | 1E1E1EFF               <1>| ...
  2616 | 00003EEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2617 | 00003EF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2618 | 00003F00 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2619 | 00003F09 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2620 | 00003F12 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2621 | 00003F1B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2622 | 00003F24 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2623 | 00003F2D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2624 | 00003F36 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2625 | 00003F3F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2626 | 00003F48 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2627 | 00003F51 | FF1E1E1FFF232127FF-    <1>| ...
  2628 | 00003F5A | 3A2E55FF594290FF68-    <1>| ...
  2629 | 00003F63 | 4CA7FF6F55A4FF5C59-    <1>| ...
  2630 | 00003F6C | 68FF6E6B79FF686079-    <1>| ...
  2631 | 00003F75 | FF5E537DFF675199FF-    <1>| ...
  2632 | 00003F7E | 8163C8FF654CB2FF54-    <1>| ...
  2633 | 00003F87 | 40ABFF4335A5FF3C30-    <1>| ...
  2634 | 00003F90 | A6FF392DA6FF4738AE-    <1>| ...
  2635 | 00003F99 | FF5744B5FF6349B6FF-    <1>| ...
  2636 | 00003FA2 | 6F56BBFF6D53B8FF66-    <1>| ...
  2637 | 00003FAB | 519CFF574693FF4E3F-    <1>| ...
  2638 | 00003FB4 | 86FF2B263EFF201F22-    <1>| ...
  2639 | 00003FBD | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2640 | 00003FC6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2641 | 00003FCF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2642 | 00003FD8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2643 | 00003FE1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2644 | 00003FEA | 1E1E1EFF               <1>| ...
  2645 | 00003FEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2646 | 00003FF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2647 | 00004000 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2648 | 00004009 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2649 | 00004012 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2650 | 0000401B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2651 | 00004024 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2652 | 0000402D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2653 | 00004036 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2654 | 0000403F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2655 | 00004048 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2656 | 00004051 | FF1E1E1EFF211F24FF-    <1>| ...
  2657 | 0000405A | 312845FF523D85FF62-    <1>| ...
  2658 | 00004063 | 47A2FF6B50AAFF917F-    <1>| ...
  2659 | 0000406C | B5FFB6B1C8FFC5C1D0-    <1>| ...
  2660 | 00004075 | FFC0BFC8FF7F7B89FF-    <1>| ...
  2661 | 0000407E | 68568CFF7F60C3FF79-    <1>| ...
  2662 | 00004087 | 5AC3FF7758C1FF785A-    <1>| ...
  2663 | 00004090 | C3FF7A5DC6FF7658C6-    <1>| ...
  2664 | 00004099 | FF7556C4FF7252BFFF-    <1>| ...
  2665 | 000040A2 | 694EB5FF624EA3FF68-    <1>| ...
  2666 | 000040AB | 5F7EFF625499FF4D40-    <1>| ...
  2667 | 000040B4 | 82FF29253AFF1F1F21-    <1>| ...
  2668 | 000040BD | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2669 | 000040C6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2670 | 000040CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2671 | 000040D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2672 | 000040E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2673 | 000040EA | 1E1E1EFF               <1>| ...
  2674 | 000040EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2675 | 000040F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2676 | 00004100 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2677 | 00004109 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2678 | 00004112 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2679 | 0000411B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2680 | 00004124 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2681 | 0000412D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2682 | 00004136 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2683 | 0000413F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2684 | 00004148 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2685 | 00004151 | FF1E1E1EFF201F22FF-    <1>| ...
  2686 | 0000415A | 2B243CFF4D397DFF5F-    <1>| ...
  2687 | 00004163 | 449CFF6248A3FF694C-    <1>| ...
  2688 | 0000416C | A8FF6F51B0FF755BB0-    <1>| ...
  2689 | 00004175 | FF8C7AB8FF9785C2FF-    <1>| ...
  2690 | 0000417E | A99FC1FF755DB0FF70-    <1>| ...
  2691 | 00004187 | 4FBBFF7351BFFF7353-    <1>| ...
  2692 | 00004190 | BFFF7055C2FF5945BA-    <1>| ...
  2693 | 00004199 | FF4036B0FF3029A7FF-    <1>| ...
  2694 | 000041A2 | 31299FFF514989FF86-    <1>| ...
  2695 | 000041AB | 81A5FF534192FF463A-    <1>| ...
  2696 | 000041B4 | 77FF272334FF1F1E20-    <1>| ...
  2697 | 000041BD | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2698 | 000041C6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2699 | 000041CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2700 | 000041D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2701 | 000041E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2702 | 000041EA | 1E1E1EFF               <1>| ...
  2703 | 000041EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2704 | 000041F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2705 | 00004200 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2706 | 00004209 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2707 | 00004212 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2708 | 0000421B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2709 | 00004224 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2710 | 0000422D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2711 | 00004236 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2712 | 0000423F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2713 | 00004248 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2714 | 00004251 | FF1E1E1EFF1F1E20FF-    <1>| ...
  2715 | 0000425A | 282234FF493574FF58-    <1>| ...
  2716 | 00004263 | 3F93FF5D449BFF5F46-    <1>| ...
  2717 | 0000426C | 9FFF684AAAFF6449A5-    <1>| ...
  2718 | 00004275 | FF6B4FADFF6D4FB3FF-    <1>| ...
  2719 | 0000427E | 694CB0FF6B4EB0FF62-    <1>| ...
  2720 | 00004287 | 49B8FF4134B1FF312A-    <1>| ...
  2721 | 00004290 | ACFF2725A7FF2221A2-    <1>| ...
  2722 | 00004299 | FF1E21A1FF20209EFF-    <1>| ...
  2723 | 000042A2 | 1F1C93FF362E7EFF50-    <1>| ...
  2724 | 000042AB | 4585FF473974FF392F-    <1>| ...
  2725 | 000042B4 | 5AFF23212BFF1E1E1F-    <1>| ...
  2726 | 000042BD | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2727 | 000042C6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2728 | 000042CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2729 | 000042D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2730 | 000042E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2731 | 000042EA | 1E1E1EFF               <1>| ...
  2732 | 000042EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2733 | 000042F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2734 | 00004300 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2735 | 00004309 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2736 | 00004312 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2737 | 0000431B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2738 | 00004324 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2739 | 0000432D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2740 | 00004336 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2741 | 0000433F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2742 | 00004348 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2743 | 00004351 | FF1E1E1EFF1E1E1FFF-    <1>| ...
  2744 | 0000435A | 25212EFF43336AFF52-    <1>| ...
  2745 | 00004363 | 3C8BFF584095FF5B43-    <1>| ...
  2746 | 0000436C | 98FF61459FFF655594-    <1>| ...
  2747 | 00004375 | FF403468FF6448A4FF-    <1>| ...
  2748 | 0000437E | 6245A8FF6147ABFF3B-    <1>| ...
  2749 | 00004387 | 31A6FF201E9FFF1E1E-    <1>| ...
  2750 | 00004390 | 9EFF1D1D9CFF1C1B97-    <1>| ...
  2751 | 00004399 | FF1A1D95FF171660FF-    <1>| ...
  2752 | 000043A2 | 15124BFF36297FFF43-    <1>| ...
  2753 | 000043AB | 336DFF392B4EFF2822-    <1>| ...
  2754 | 000043B4 | 33FF1F1E21FF1E1E1E-    <1>| ...
  2755 | 000043BD | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2756 | 000043C6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2757 | 000043CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2758 | 000043D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2759 | 000043E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2760 | 000043EA | 1E1E1EFF               <1>| ...
  2761 | 000043EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2762 | 000043F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2763 | 00004400 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2764 | 00004409 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2765 | 00004412 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2766 | 0000441B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2767 | 00004424 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2768 | 0000442D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2769 | 00004436 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2770 | 0000443F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2771 | 00004448 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2772 | 00004451 | FF1E1E1EFF1E1E1FFF-    <1>| ...
  2773 | 0000445A | 222027FF362B52FF48-    <1>| ...
  2774 | 00004463 | 377CFF513D8EFF563F-    <1>| ...
  2775 | 0000446C | 91FF4D3C7EFF3D3364-    <1>| ...
  2776 | 00004475 | FF312D48FF463376FF-    <1>| ...
  2777 | 0000447E | 5A409FFF5A43A1FF30-    <1>| ...
  2778 | 00004487 | 2898FF1C1B95FF181A-    <1>| ...
  2779 | 00004490 | 77FF181763FF1A1988-    <1>| ...
  2780 | 00004499 | FF18197EFF0E102EFF-    <1>| ...
  2781 | 000044A2 | 191445FF40317EFF39-    <1>| ...
  2782 | 000044AB | 2746FF332841FF2320-    <1>| ...
  2783 | 000044B4 | 26FF1E1E1EFF1E1E1E-    <1>| ...
  2784 | 000044BD | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2785 | 000044C6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2786 | 000044CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2787 | 000044D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2788 | 000044E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2789 | 000044EA | 1E1E1EFF               <1>| ...
  2790 | 000044EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2791 | 000044F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2792 | 00004500 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2793 | 00004509 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2794 | 00004512 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2795 | 0000451B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2796 | 00004524 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2797 | 0000452D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2798 | 00004536 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2799 | 0000453F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2800 | 00004548 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2801 | 00004551 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2802 | 0000455A | 201E23FF2B253FFF44-    <1>| ...
  2803 | 00004563 | 3472FF4D3985FF533A-    <1>| ...
  2804 | 0000456C | 8CFF4D4371FF282A3E-    <1>| ...
  2805 | 00004575 | FF49475CFF3A2C61FF-    <1>| ...
  2806 | 0000457E | 553C95FF543D97FF30-    <1>| ...
  2807 | 00004587 | 278EFF1E1A8AFF1312-    <1>| ...
  2808 | 00004590 | 3BFF0F0E31FF1C197F-    <1>| ...
  2809 | 00004599 | FF1C1A84FF1D1B7CFF-    <1>| ...
  2810 | 000045A2 | 362C82FF4B3A80FF3D-    <1>| ...
  2811 | 000045AB | 3062FF2E2741FF2120-    <1>| ...
  2812 | 000045B4 | 24FF1E1E1EFF1E1E1E-    <1>| ...
  2813 | 000045BD | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2814 | 000045C6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2815 | 000045CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2816 | 000045D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2817 | 000045E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2818 | 000045EA | 1E1E1EFF               <1>| ...
  2819 | 000045EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2820 | 000045F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2821 | 00004600 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2822 | 00004609 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2823 | 00004612 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2824 | 0000461B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2825 | 00004624 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2826 | 0000462D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2827 | 00004636 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2828 | 0000463F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2829 | 00004648 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2830 | 00004651 | FF1E1E1EFF1F1E20FF-    <1>| ...
  2831 | 0000465A | 221F28FF2F2747FF45-    <1>| ...
  2832 | 00004663 | 3674FF4B3884FF4A38-    <1>| ...
  2833 | 0000466C | 87FF4E3B8AFF4A3D7F-    <1>| ...
  2834 | 00004675 | FF37335EFF3D316BFF-    <1>| ...
  2835 | 0000467E | 524471FF4E456CFF26-    <1>| ...
  2836 | 00004687 | 1E60FF1C177AFF1A17-    <1>| ...
  2837 | 00004690 | 78FF1A1674FF1E197C-    <1>| ...
  2838 | 00004699 | FF2B237DFF372D78FF-    <1>| ...
  2839 | 000046A2 | 3C316FFF382E5EFF35-    <1>| ...
  2840 | 000046AB | 2D52FF252230FF1F1E-    <1>| ...
  2841 | 000046B4 | 20FF1E1E1EFF1E1E1E-    <1>| ...
  2842 | 000046BD | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2843 | 000046C6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2844 | 000046CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2845 | 000046D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2846 | 000046E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2847 | 000046EA | 1E1E1EFF               <1>| ...
  2848 | 000046EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2849 | 000046F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2850 | 00004700 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2851 | 00004709 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2852 | 00004712 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2853 | 0000471B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2854 | 00004724 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2855 | 0000472D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2856 | 00004736 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2857 | 0000473F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2858 | 00004748 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2859 | 00004751 | FF1F1E20FF24212CFF-    <1>| ...
  2860 | 0000475A | 2E2643FF42336EFF4A-    <1>| ...
  2861 | 00004763 | 3982FF4B3984FF4B37-    <1>| ...
  2862 | 0000476C | 84FF4C3985FF4D3887-    <1>| ...
  2863 | 00004775 | FF4E3A89FF4D3986FF-    <1>| ...
  2864 | 0000477E | 5C5282FF9896A7FF31-    <1>| ...
  2865 | 00004787 | 2E42FF33276DFF3529-    <1>| ...
  2866 | 00004790 | 83FF372B83FF453881-    <1>| ...
  2867 | 00004799 | FF473A66FF382D57FF-    <1>| ...
  2868 | 000047A2 | 2C2444FF2A243DFF26-    <1>| ...
  2869 | 000047AB | 2333FF201F23FF1E1E-    <1>| ...
  2870 | 000047B4 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2871 | 000047BD | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2872 | 000047C6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2873 | 000047CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2874 | 000047D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2875 | 000047E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2876 | 000047EA | 1E1E1EFF               <1>| ...
  2877 | 000047EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2878 | 000047F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2879 | 00004800 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2880 | 00004809 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2881 | 00004812 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2882 | 0000481B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2883 | 00004824 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2884 | 0000482D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2885 | 00004836 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2886 | 0000483F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2887 | 00004848 | 1EFF1E1E1EFF1E1E1F-    <1>| ...
  2888 | 00004851 | FF222026FF2E2744FF-    <1>| ...
  2889 | 0000485A | 3B2E61FF443578FF4A-    <1>| ...
  2890 | 00004863 | 3887FF4D3A89FF4937-    <1>| ...
  2891 | 0000486C | 84FF4B3882FF4B3881-    <1>| ...
  2892 | 00004875 | FF4B3782FF463479FF-    <1>| ...
  2893 | 0000487E | 3D2F6BFF4B3C77FF40-    <1>| ...
  2894 | 00004887 | 3071FF4B3786FF4C3A-    <1>| ...
  2895 | 00004890 | 8AFF4E3B86FF5E5472-    <1>| ...
  2896 | 00004899 | FF564E68FF362F46FF-    <1>| ...
  2897 | 000048A2 | 272133FF221F28FF1F-    <1>| ...
  2898 | 000048AB | 1E22FF1E1E1FFF1E1E-    <1>| ...
  2899 | 000048B4 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2900 | 000048BD | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2901 | 000048C6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2902 | 000048CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2903 | 000048D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2904 | 000048E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2905 | 000048EA | 1E1E1EFF               <1>| ...
  2906 | 000048EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2907 | 000048F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2908 | 00004900 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2909 | 00004909 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2910 | 00004912 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2911 | 0000491B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2912 | 00004924 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2913 | 0000492D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2914 | 00004936 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2915 | 0000493F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2916 | 00004948 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2917 | 00004951 | FF201F23FF292337FF-    <1>| ...
  2918 | 0000495A | 362B53FF3C2F63FF40-    <1>| ...
  2919 | 00004963 | 336EFF48387DFF4F3B-    <1>| ...
  2920 | 0000496C | 8AFF4B3B83FF4D3A83-    <1>| ...
  2921 | 00004975 | FF4B387DFF403167FF-    <1>| ...
  2922 | 0000497E | 1E172BFF171227FF2E-    <1>| ...
  2923 | 00004987 | 2450FF4B3880FF4B38-    <1>| ...
  2924 | 00004990 | 7FFF443367FF584D71-    <1>| ...
  2925 | 00004999 | FF413B4FFF27252DFF-    <1>| ...
  2926 | 000049A2 | 201F22FF1F1E20FF1E-    <1>| ...
  2927 | 000049AB | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2928 | 000049B4 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2929 | 000049BD | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2930 | 000049C6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2931 | 000049CF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2932 | 000049D8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2933 | 000049E1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2934 | 000049EA | 1E1E1EFF               <1>| ...
  2935 | 000049EE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2936 | 000049F7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2937 | 00004A00 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2938 | 00004A09 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2939 | 00004A12 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2940 | 00004A1B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2941 | 00004A24 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2942 | 00004A2D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2943 | 00004A36 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2944 | 00004A3F | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2945 | 00004A48 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2946 | 00004A51 | FF1E1E1FFF201F22FF-    <1>| ...
  2947 | 00004A5A | 222029FF24212DFF28-    <1>| ...
  2948 | 00004A63 | 2436FF372D55FF4335-    <1>| ...
  2949 | 00004A6C | 71FF463777FF443575-    <1>| ...
  2950 | 00004A75 | FF443473FF453571FF-    <1>| ...
  2951 | 00004A7E | 423469FF3C3162FF3A-    <1>| ...
  2952 | 00004A87 | 2F63FF4C387CFF4837-    <1>| ...
  2953 | 00004A90 | 75FF473971FF463C67-    <1>| ...
  2954 | 00004A99 | FF2A2732FF201F21FF-    <1>| ...
  2955 | 00004AA2 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2956 | 00004AAB | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2957 | 00004AB4 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2958 | 00004ABD | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2959 | 00004AC6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2960 | 00004ACF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2961 | 00004AD8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2962 | 00004AE1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2963 | 00004AEA | 1E1E1EFF               <1>| ...
  2964 | 00004AEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42633866
  2965 | 00004AF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2966 | 00004B00 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2967 | 00004B09 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2968 | 00004B12 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2969 | 00004B1B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2970 | 00004B24 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2971 | 00004B2D | FF1E1E1EFF1E1E1EFE-    <1>| ...
  2972 | 00004B36 | 1E1E1EFD1E1E1EFC1E-    <1>| ...
  2973 | 00004B3F | 1E1EFC1E1E1EFC1E1E-    <1>| ...
  2974 | 00004B48 | 1EFC1E1E1EFC1E1E1E-    <1>| ...
  2975 | 00004B51 | FC1E1E1EFC1E1E1EFC-    <1>| ...
  2976 | 00004B5A | 1E1E1FFC1F1E1FFC1F-    <1>| ...
  2977 | 00004B63 | 1F21FC222129FC2624-    <1>| ...
  2978 | 00004B6C | 31FC272534FC282434-    <1>| ...
  2979 | 00004B75 | FC292538FC2E2741FC-    <1>| ...
  2980 | 00004B7E | 352D50FC3E335FFC42-    <1>| ...
  2981 | 00004B87 | 3569FC43366AFC392F-    <1>| ...
  2982 | 00004B90 | 56FC2D283CFC272531-    <1>| ...
  2983 | 00004B99 | FC202022FC1E1E1EFC-    <1>| ...
  2984 | 00004BA2 | 1E1E1EFC1E1E1EFC1E-    <1>| ...
  2985 | 00004BAB | 1E1EFC1E1E1EFC1E1E-    <1>| ...
  2986 | 00004BB4 | 1EFC1E1E1EFC1E1E1E-    <1>| ...
  2987 | 00004BBD | FC1E1E1EFC1E1E1EFD-    <1>| ...
  2988 | 00004BC6 | 1E1E1EFD1E1E1EFE1E-    <1>| ...
  2989 | 00004BCF | 1E1EFE1E1E1EFF1E1E-    <1>| ...
  2990 | 00004BD8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2991 | 00004BE1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2992 | 00004BEA | 1E1E1EFF               <1>| ...
  2993 | 00004BEE | 1E1E1EFF1E1E1EFF1E-    <1>| dd 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 4280163870, 42801638
  2994 | 00004BF7 | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2995 | 00004C00 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  2996 | 00004C09 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  2997 | 00004C12 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  2998 | 00004C1B | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  2999 | 00004C24 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  3000 | 00004C2D | FF1E1E1EFF1E1E1EFF-    <1>| ...
  3001 | 00004C36 | 1E1E1EFF1E1E1EFE1E-    <1>| ...
  3002 | 00004C3F | 1E1EFD1E1E1EFA1E1E-    <1>| ...
  3003 | 00004C48 | 1EFA1E1E1EFA1E1E1E-    <1>| ...
  3004 | 00004C51 | FB1E1E1EFC1E1E1EFB-    <1>| ...
  3005 | 00004C5A | 1E1E1EFA1E1E1EF61E-    <1>| ...
  3006 | 00004C63 | 1E1EF51E1E1EF31E1E-    <1>| ...
  3007 | 00004C6C | 1FF31E1E1FF41E1E1F-    <1>| ...
  3008 | 00004C75 | F21F1E20EA201F22E5-    <1>| ...
  3009 | 00004C7E | 212026E1242229DF25-    <1>| ...
  3010 | 00004C87 | 232CDE25222BDF2220-    <1>| ...
  3011 | 00004C90 | 25E51F1F20EF1E1E1E-    <1>| ...
  3012 | 00004C99 | F81E1E1EFD1E1E1EFE-    <1>| ...
  3013 | 00004CA2 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  3014 | 00004CAB | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  3015 | 00004CB4 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  3016 | 00004CBD | FF1E1E1EFF1E1E1EFF-    <1>| ...
  3017 | 00004CC6 | 1E1E1EFF1E1E1EFF1E-    <1>| ...
  3018 | 00004CCF | 1E1EFF1E1E1EFF1E1E-    <1>| ...
  3019 | 00004CD8 | 1EFF1E1E1EFF1E1E1E-    <1>| ...
  3020 | 00004CE1 | FF1E1E1EFF1E1E1EFF-    <1>| ...
  3021 | 00004CEA | 1E1E1EFF               <1>| ...
  3022 |          |                           | %endif
  3023 |          |                           | end:
